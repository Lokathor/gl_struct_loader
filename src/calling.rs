use super::*;

#[cold]
#[doc(hidden)]
#[inline(never)]
#[cfg_attr(feature = "track_caller", track_caller)]
fn cold_panic(msg: &str) -> ! {
  panic!("Called a GL fn that wasn't loaded: {msg}");
}

macro_rules! mk_wrapper_method {
  ($full_name:ident, $short_name:ident, [$($arg_name:ident : $arg_ty:ty,)*] -> $ret_ty:ty) => {
    #[inline]
    #[allow(nonstandard_style)]
    #[allow(clippy::unused_unit)]
    #[allow(clippy::needless_return)]
    #[allow(clippy::too_many_arguments)]
    #[allow(clippy::missing_safety_doc)]
    #[cfg_attr(feature = "track_caller", track_caller)]
    pub unsafe fn $short_name(&self, $($arg_name : $arg_ty),*) -> $ret_ty {
      if let Some(f) = self.$full_name {
        return unsafe { f($($arg_name),*) };
      } else {
        cold_panic(stringify!($full_name));
      }
    }
  };
}

#[allow(missing_docs)]
impl GlFns {
  mk_wrapper_method!(glActiveShaderProgram, ActiveShaderProgram, [pipeline: GLuint, program: GLuint, ] -> ());
  mk_wrapper_method!(glActiveTexture, ActiveTexture, [texture: GLenum, ] -> ());
  mk_wrapper_method!(glAttachShader, AttachShader, [program: GLuint, shader: GLuint, ] -> ());
  mk_wrapper_method!(glBeginConditionalRender, BeginConditionalRender, [id: GLuint, mode: GLenum, ] -> ());
  mk_wrapper_method!(glBeginQuery, BeginQuery, [target: GLenum, id: GLuint, ] -> ());
  mk_wrapper_method!(glBeginQueryIndexed, BeginQueryIndexed, [target: GLenum, index: GLuint, id: GLuint, ] -> ());
  mk_wrapper_method!(glBeginTransformFeedback, BeginTransformFeedback, [primitiveMode: GLenum, ] -> ());
  mk_wrapper_method!(glBindAttribLocation, BindAttribLocation, [program: GLuint, index: GLuint, name: *const GLchar, ] -> ());
  mk_wrapper_method!(glBindBuffer, BindBuffer, [target: GLenum, buffer: GLuint, ] -> ());
  mk_wrapper_method!(glBindBufferBase, BindBufferBase, [target: GLenum, index: GLuint, buffer: GLuint, ] -> ());
  mk_wrapper_method!(glBindBufferRange, BindBufferRange, [target: GLenum, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr, ] -> ());
  mk_wrapper_method!(glBindBuffersBase, BindBuffersBase, [target: GLenum, first: GLuint, count: GLsizei, buffers: *const GLuint, ] -> ());
  mk_wrapper_method!(glBindBuffersRange, BindBuffersRange, [target: GLenum, first: GLuint, count: GLsizei, buffers: *const GLuint, offsets: *const GLintptr, sizes: *const GLsizeiptr, ] -> ());
  mk_wrapper_method!(glBindFragDataLocation, BindFragDataLocation, [program: GLuint, color: GLuint, name: *const GLchar, ] -> ());
  mk_wrapper_method!(glBindFragDataLocationIndexed, BindFragDataLocationIndexed, [program: GLuint, colorNumber: GLuint, index: GLuint, name: *const GLchar, ] -> ());
  mk_wrapper_method!(glBindFramebuffer, BindFramebuffer, [target: GLenum, framebuffer: GLuint, ] -> ());
  mk_wrapper_method!(glBindImageTexture, BindImageTexture, [unit: GLuint, texture: GLuint, level: GLint, layered: GLboolean, layer: GLint, access: GLenum, format: GLenum, ] -> ());
  mk_wrapper_method!(glBindImageTextures, BindImageTextures, [first: GLuint, count: GLsizei, textures: *const GLuint, ] -> ());
  mk_wrapper_method!(glBindProgramPipeline, BindProgramPipeline, [pipeline: GLuint, ] -> ());
  mk_wrapper_method!(glBindRenderbuffer, BindRenderbuffer, [target: GLenum, renderbuffer: GLuint, ] -> ());
  mk_wrapper_method!(glBindSampler, BindSampler, [unit: GLuint, sampler: GLuint, ] -> ());
  mk_wrapper_method!(glBindSamplers, BindSamplers, [first: GLuint, count: GLsizei, samplers: *const GLuint, ] -> ());
  mk_wrapper_method!(glBindTexture, BindTexture, [target: GLenum, texture: GLuint, ] -> ());
  mk_wrapper_method!(glBindTextureUnit, BindTextureUnit, [unit: GLuint, texture: GLuint, ] -> ());
  mk_wrapper_method!(glBindTextures, BindTextures, [first: GLuint, count: GLsizei, textures: *const GLuint, ] -> ());
  mk_wrapper_method!(glBindTransformFeedback, BindTransformFeedback, [target: GLenum, id: GLuint, ] -> ());
  mk_wrapper_method!(glBindVertexArray, BindVertexArray, [array: GLuint, ] -> ());
  mk_wrapper_method!(glBindVertexBuffer, BindVertexBuffer, [bindingindex: GLuint, buffer: GLuint, offset: GLintptr, stride: GLsizei, ] -> ());
  mk_wrapper_method!(glBindVertexBuffers, BindVertexBuffers, [first: GLuint, count: GLsizei, buffers: *const GLuint, offsets: *const GLintptr, strides: *const GLsizei, ] -> ());
  mk_wrapper_method!(glBlendBarrier, BlendBarrier, [] -> ());
  mk_wrapper_method!(glBlendColor, BlendColor, [red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat, ] -> ());
  mk_wrapper_method!(glBlendEquation, BlendEquation, [mode: GLenum, ] -> ());
  mk_wrapper_method!(glBlendEquationSeparate, BlendEquationSeparate, [modeRGB: GLenum, modeAlpha: GLenum, ] -> ());
  mk_wrapper_method!(glBlendEquationSeparatei, BlendEquationSeparatei, [buf: GLuint, modeRGB: GLenum, modeAlpha: GLenum, ] -> ());
  mk_wrapper_method!(glBlendEquationi, BlendEquationi, [buf: GLuint, mode: GLenum, ] -> ());
  mk_wrapper_method!(glBlendFunc, BlendFunc, [sfactor: GLenum, dfactor: GLenum, ] -> ());
  mk_wrapper_method!(glBlendFuncSeparate, BlendFuncSeparate, [sfactorRGB: GLenum, dfactorRGB: GLenum, sfactorAlpha: GLenum, dfactorAlpha: GLenum, ] -> ());
  mk_wrapper_method!(glBlendFuncSeparatei, BlendFuncSeparatei, [buf: GLuint, srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum, ] -> ());
  mk_wrapper_method!(glBlendFunci, BlendFunci, [buf: GLuint, src: GLenum, dst: GLenum, ] -> ());
  mk_wrapper_method!(glBlitFramebuffer, BlitFramebuffer, [srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum, ] -> ());
  mk_wrapper_method!(glBlitNamedFramebuffer, BlitNamedFramebuffer, [readFramebuffer: GLuint, drawFramebuffer: GLuint, srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum, ] -> ());
  mk_wrapper_method!(glBufferData, BufferData, [target: GLenum, size: GLsizeiptr, data: *const c_void, usage: GLenum, ] -> ());
  mk_wrapper_method!(glBufferStorage, BufferStorage, [target: GLenum, size: GLsizeiptr, data: *const c_void, flags: GLbitfield, ] -> ());
  mk_wrapper_method!(glBufferSubData, BufferSubData, [target: GLenum, offset: GLintptr, size: GLsizeiptr, data: *const c_void, ] -> ());
  mk_wrapper_method!(glCheckFramebufferStatus, CheckFramebufferStatus, [target: GLenum, ] -> GLenum);
  mk_wrapper_method!(glCheckNamedFramebufferStatus, CheckNamedFramebufferStatus, [framebuffer: GLuint, target: GLenum, ] -> GLenum);
  mk_wrapper_method!(glClampColor, ClampColor, [target: GLenum, clamp: GLenum, ] -> ());
  mk_wrapper_method!(glClear, Clear, [mask: GLbitfield, ] -> ());
  mk_wrapper_method!(glClearBufferData, ClearBufferData, [target: GLenum, internalformat: GLenum, format: GLenum, ty: GLenum, data: *const c_void, ] -> ());
  mk_wrapper_method!(glClearBufferSubData, ClearBufferSubData, [target: GLenum, internalformat: GLenum, offset: GLintptr, size: GLsizeiptr, format: GLenum, ty: GLenum, data: *const c_void, ] -> ());
  mk_wrapper_method!(glClearBufferfi, ClearBufferfi, [buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint, ] -> ());
  mk_wrapper_method!(glClearBufferfv, ClearBufferfv, [buffer: GLenum, drawbuffer: GLint, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glClearBufferiv, ClearBufferiv, [buffer: GLenum, drawbuffer: GLint, value: *const GLint, ] -> ());
  mk_wrapper_method!(glClearBufferuiv, ClearBufferuiv, [buffer: GLenum, drawbuffer: GLint, value: *const GLuint, ] -> ());
  mk_wrapper_method!(glClearColor, ClearColor, [red: GLfloat, green: GLfloat, blue: GLfloat, alpha: GLfloat, ] -> ());
  mk_wrapper_method!(glClearDepth, ClearDepth, [depth: GLdouble, ] -> ());
  mk_wrapper_method!(glClearDepthf, ClearDepthf, [d: GLfloat, ] -> ());
  mk_wrapper_method!(glClearNamedBufferData, ClearNamedBufferData, [buffer: GLuint, internalformat: GLenum, format: GLenum, ty: GLenum, data: *const c_void, ] -> ());
  mk_wrapper_method!(glClearNamedBufferSubData, ClearNamedBufferSubData, [buffer: GLuint, internalformat: GLenum, offset: GLintptr, size: GLsizeiptr, format: GLenum, ty: GLenum, data: *const c_void, ] -> ());
  mk_wrapper_method!(glClearNamedFramebufferfi, ClearNamedFramebufferfi, [framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint, ] -> ());
  mk_wrapper_method!(glClearNamedFramebufferfv, ClearNamedFramebufferfv, [framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glClearNamedFramebufferiv, ClearNamedFramebufferiv, [framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: *const GLint, ] -> ());
  mk_wrapper_method!(glClearNamedFramebufferuiv, ClearNamedFramebufferuiv, [framebuffer: GLuint, buffer: GLenum, drawbuffer: GLint, value: *const GLuint, ] -> ());
  mk_wrapper_method!(glClearStencil, ClearStencil, [s: GLint, ] -> ());
  mk_wrapper_method!(glClearTexImage, ClearTexImage, [texture: GLuint, level: GLint, format: GLenum, ty: GLenum, data: *const c_void, ] -> ());
  mk_wrapper_method!(glClearTexSubImage, ClearTexSubImage, [texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, ty: GLenum, data: *const c_void, ] -> ());
  mk_wrapper_method!(glClientWaitSync, ClientWaitSync, [sync: GLsync, flags: GLbitfield, timeout: GLuint64, ] -> GLenum);
  mk_wrapper_method!(glClipControl, ClipControl, [origin: GLenum, depth: GLenum, ] -> ());
  mk_wrapper_method!(glColorMask, ColorMask, [red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean, ] -> ());
  mk_wrapper_method!(glColorMaski, ColorMaski, [index: GLuint, r: GLboolean, g: GLboolean, b: GLboolean, a: GLboolean, ] -> ());
  mk_wrapper_method!(glColorP3ui, ColorP3ui, [ty: GLenum, color: GLuint, ] -> ());
  mk_wrapper_method!(glColorP3uiv, ColorP3uiv, [ty: GLenum, color: *const GLuint, ] -> ());
  mk_wrapper_method!(glColorP4ui, ColorP4ui, [ty: GLenum, color: GLuint, ] -> ());
  mk_wrapper_method!(glColorP4uiv, ColorP4uiv, [ty: GLenum, color: *const GLuint, ] -> ());
  mk_wrapper_method!(glCompileShader, CompileShader, [shader: GLuint, ] -> ());
  mk_wrapper_method!(glCompressedTexImage1D, CompressedTexImage1D, [target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, border: GLint, imageSize: GLsizei, data: *const c_void, ] -> ());
  mk_wrapper_method!(glCompressedTexImage2D, CompressedTexImage2D, [target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, data: *const c_void, ] -> ());
  mk_wrapper_method!(glCompressedTexImage3D, CompressedTexImage3D, [target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, data: *const c_void, ] -> ());
  mk_wrapper_method!(glCompressedTexSubImage1D, CompressedTexSubImage1D, [target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: *const c_void, ] -> ());
  mk_wrapper_method!(glCompressedTexSubImage2D, CompressedTexSubImage2D, [target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: *const c_void, ] -> ());
  mk_wrapper_method!(glCompressedTexSubImage3D, CompressedTexSubImage3D, [target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: *const c_void, ] -> ());
  mk_wrapper_method!(glCompressedTextureSubImage1D, CompressedTextureSubImage1D, [texture: GLuint, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, imageSize: GLsizei, data: *const c_void, ] -> ());
  mk_wrapper_method!(glCompressedTextureSubImage2D, CompressedTextureSubImage2D, [texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, data: *const c_void, ] -> ());
  mk_wrapper_method!(glCompressedTextureSubImage3D, CompressedTextureSubImage3D, [texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, data: *const c_void, ] -> ());
  mk_wrapper_method!(glCopyBufferSubData, CopyBufferSubData, [readTarget: GLenum, writeTarget: GLenum, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr, ] -> ());
  mk_wrapper_method!(glCopyImageSubData, CopyImageSubData, [srcName: GLuint, srcTarget: GLenum, srcLevel: GLint, srcX: GLint, srcY: GLint, srcZ: GLint, dstName: GLuint, dstTarget: GLenum, dstLevel: GLint, dstX: GLint, dstY: GLint, dstZ: GLint, srcWidth: GLsizei, srcHeight: GLsizei, srcDepth: GLsizei, ] -> ());
  mk_wrapper_method!(glCopyNamedBufferSubData, CopyNamedBufferSubData, [readBuffer: GLuint, writeBuffer: GLuint, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr, ] -> ());
  mk_wrapper_method!(glCopyTexImage1D, CopyTexImage1D, [target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, border: GLint, ] -> ());
  mk_wrapper_method!(glCopyTexImage2D, CopyTexImage2D, [target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint, ] -> ());
  mk_wrapper_method!(glCopyTexSubImage1D, CopyTexSubImage1D, [target: GLenum, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei, ] -> ());
  mk_wrapper_method!(glCopyTexSubImage2D, CopyTexSubImage2D, [target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei, ] -> ());
  mk_wrapper_method!(glCopyTexSubImage3D, CopyTexSubImage3D, [target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei, ] -> ());
  mk_wrapper_method!(glCopyTextureSubImage1D, CopyTextureSubImage1D, [texture: GLuint, level: GLint, xoffset: GLint, x: GLint, y: GLint, width: GLsizei, ] -> ());
  mk_wrapper_method!(glCopyTextureSubImage2D, CopyTextureSubImage2D, [texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei, ] -> ());
  mk_wrapper_method!(glCopyTextureSubImage3D, CopyTextureSubImage3D, [texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei, ] -> ());
  mk_wrapper_method!(glCreateBuffers, CreateBuffers, [n: GLsizei, buffers: *mut GLuint, ] -> ());
  mk_wrapper_method!(glCreateFramebuffers, CreateFramebuffers, [n: GLsizei, framebuffers: *mut GLuint, ] -> ());
  mk_wrapper_method!(glCreateProgram, CreateProgram, [] -> GLuint);
  mk_wrapper_method!(glCreateProgramPipelines, CreateProgramPipelines, [n: GLsizei, pipelines: *mut GLuint, ] -> ());
  mk_wrapper_method!(glCreateQueries, CreateQueries, [target: GLenum, n: GLsizei, ids: *mut GLuint, ] -> ());
  mk_wrapper_method!(glCreateRenderbuffers, CreateRenderbuffers, [n: GLsizei, renderbuffers: *mut GLuint, ] -> ());
  mk_wrapper_method!(glCreateSamplers, CreateSamplers, [n: GLsizei, samplers: *mut GLuint, ] -> ());
  mk_wrapper_method!(glCreateShader, CreateShader, [ty: GLenum, ] -> GLuint);
  mk_wrapper_method!(glCreateShaderProgramv, CreateShaderProgramv, [ty: GLenum, count: GLsizei, strings: *const *const GLchar, ] -> GLuint);
  mk_wrapper_method!(glCreateTextures, CreateTextures, [target: GLenum, n: GLsizei, textures: *mut GLuint, ] -> ());
  mk_wrapper_method!(glCreateTransformFeedbacks, CreateTransformFeedbacks, [n: GLsizei, ids: *mut GLuint, ] -> ());
  mk_wrapper_method!(glCreateVertexArrays, CreateVertexArrays, [n: GLsizei, arrays: *mut GLuint, ] -> ());
  mk_wrapper_method!(glCullFace, CullFace, [mode: GLenum, ] -> ());
  mk_wrapper_method!(glDebugMessageCallback, DebugMessageCallback, [callback: GLDEBUGPROC, userParam: *const c_void, ] -> ());
  mk_wrapper_method!(glDebugMessageCallbackKHR, DebugMessageCallbackKHR, [callback: GLDEBUGPROCKHR, userParam: *const c_void, ] -> ());
  mk_wrapper_method!(glDebugMessageControl, DebugMessageControl, [source: GLenum, ty: GLenum, severity: GLenum, count: GLsizei, ids: *const GLuint, enabled: GLboolean, ] -> ());
  mk_wrapper_method!(glDebugMessageControlKHR, DebugMessageControlKHR, [source: GLenum, ty: GLenum, severity: GLenum, count: GLsizei, ids: *const GLuint, enabled: GLboolean, ] -> ());
  mk_wrapper_method!(glDebugMessageInsert, DebugMessageInsert, [source: GLenum, ty: GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: *const GLchar, ] -> ());
  mk_wrapper_method!(glDebugMessageInsertKHR, DebugMessageInsertKHR, [source: GLenum, ty: GLenum, id: GLuint, severity: GLenum, length: GLsizei, buf: *const GLchar, ] -> ());
  mk_wrapper_method!(glDeleteBuffers, DeleteBuffers, [n: GLsizei, buffers: *const GLuint, ] -> ());
  mk_wrapper_method!(glDeleteFramebuffers, DeleteFramebuffers, [n: GLsizei, framebuffers: *const GLuint, ] -> ());
  mk_wrapper_method!(glDeleteProgram, DeleteProgram, [program: GLuint, ] -> ());
  mk_wrapper_method!(glDeleteProgramPipelines, DeleteProgramPipelines, [n: GLsizei, pipelines: *const GLuint, ] -> ());
  mk_wrapper_method!(glDeleteQueries, DeleteQueries, [n: GLsizei, ids: *const GLuint, ] -> ());
  mk_wrapper_method!(glDeleteRenderbuffers, DeleteRenderbuffers, [n: GLsizei, renderbuffers: *const GLuint, ] -> ());
  mk_wrapper_method!(glDeleteSamplers, DeleteSamplers, [count: GLsizei, samplers: *const GLuint, ] -> ());
  mk_wrapper_method!(glDeleteShader, DeleteShader, [shader: GLuint, ] -> ());
  mk_wrapper_method!(glDeleteSync, DeleteSync, [sync: GLsync, ] -> ());
  mk_wrapper_method!(glDeleteTextures, DeleteTextures, [n: GLsizei, textures: *const GLuint, ] -> ());
  mk_wrapper_method!(glDeleteTransformFeedbacks, DeleteTransformFeedbacks, [n: GLsizei, ids: *const GLuint, ] -> ());
  mk_wrapper_method!(glDeleteVertexArrays, DeleteVertexArrays, [n: GLsizei, arrays: *const GLuint, ] -> ());
  mk_wrapper_method!(glDepthFunc, DepthFunc, [func: GLenum, ] -> ());
  mk_wrapper_method!(glDepthMask, DepthMask, [flag: GLboolean, ] -> ());
  mk_wrapper_method!(glDepthRange, DepthRange, [n: GLdouble, f: GLdouble, ] -> ());
  mk_wrapper_method!(glDepthRangeArrayv, DepthRangeArrayv, [first: GLuint, count: GLsizei, v: *const GLdouble, ] -> ());
  mk_wrapper_method!(glDepthRangeIndexed, DepthRangeIndexed, [index: GLuint, n: GLdouble, f: GLdouble, ] -> ());
  mk_wrapper_method!(glDepthRangef, DepthRangef, [n: GLfloat, f: GLfloat, ] -> ());
  mk_wrapper_method!(glDetachShader, DetachShader, [program: GLuint, shader: GLuint, ] -> ());
  mk_wrapper_method!(glDisable, Disable, [cap: GLenum, ] -> ());
  mk_wrapper_method!(glDisableVertexArrayAttrib, DisableVertexArrayAttrib, [vaobj: GLuint, index: GLuint, ] -> ());
  mk_wrapper_method!(glDisableVertexAttribArray, DisableVertexAttribArray, [index: GLuint, ] -> ());
  mk_wrapper_method!(glDisablei, Disablei, [target: GLenum, index: GLuint, ] -> ());
  mk_wrapper_method!(glDispatchCompute, DispatchCompute, [num_groups_x: GLuint, num_groups_y: GLuint, num_groups_z: GLuint, ] -> ());
  mk_wrapper_method!(glDispatchComputeIndirect, DispatchComputeIndirect, [indirect: GLintptr, ] -> ());
  mk_wrapper_method!(glDrawArrays, DrawArrays, [mode: GLenum, first: GLint, count: GLsizei, ] -> ());
  mk_wrapper_method!(glDrawArraysIndirect, DrawArraysIndirect, [mode: GLenum, indirect: *const c_void, ] -> ());
  mk_wrapper_method!(glDrawArraysInstanced, DrawArraysInstanced, [mode: GLenum, first: GLint, count: GLsizei, instancecount: GLsizei, ] -> ());
  mk_wrapper_method!(glDrawArraysInstancedBaseInstance, DrawArraysInstancedBaseInstance, [mode: GLenum, first: GLint, count: GLsizei, instancecount: GLsizei, baseinstance: GLuint, ] -> ());
  mk_wrapper_method!(glDrawBuffer, DrawBuffer, [buf: GLenum, ] -> ());
  mk_wrapper_method!(glDrawBuffers, DrawBuffers, [n: GLsizei, bufs: *const GLenum, ] -> ());
  mk_wrapper_method!(glDrawElements, DrawElements, [mode: GLenum, count: GLsizei, ty: GLenum, indices: *const c_void, ] -> ());
  mk_wrapper_method!(glDrawElementsBaseVertex, DrawElementsBaseVertex, [mode: GLenum, count: GLsizei, ty: GLenum, indices: *const c_void, basevertex: GLint, ] -> ());
  mk_wrapper_method!(glDrawElementsIndirect, DrawElementsIndirect, [mode: GLenum, ty: GLenum, indirect: *const c_void, ] -> ());
  mk_wrapper_method!(glDrawElementsInstanced, DrawElementsInstanced, [mode: GLenum, count: GLsizei, ty: GLenum, indices: *const c_void, instancecount: GLsizei, ] -> ());
  mk_wrapper_method!(glDrawElementsInstancedBaseInstance, DrawElementsInstancedBaseInstance, [mode: GLenum, count: GLsizei, ty: GLenum, indices: *const c_void, instancecount: GLsizei, baseinstance: GLuint, ] -> ());
  mk_wrapper_method!(glDrawElementsInstancedBaseVertex, DrawElementsInstancedBaseVertex, [mode: GLenum, count: GLsizei, ty: GLenum, indices: *const c_void, instancecount: GLsizei, basevertex: GLint, ] -> ());
  mk_wrapper_method!(glDrawElementsInstancedBaseVertexBaseInstance, DrawElementsInstancedBaseVertexBaseInstance, [mode: GLenum, count: GLsizei, ty: GLenum, indices: *const c_void, instancecount: GLsizei, basevertex: GLint, baseinstance: GLuint, ] -> ());
  mk_wrapper_method!(glDrawRangeElements, DrawRangeElements, [mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, ty: GLenum, indices: *const c_void, ] -> ());
  mk_wrapper_method!(glDrawRangeElementsBaseVertex, DrawRangeElementsBaseVertex, [mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, ty: GLenum, indices: *const c_void, basevertex: GLint, ] -> ());
  mk_wrapper_method!(glDrawTransformFeedback, DrawTransformFeedback, [mode: GLenum, id: GLuint, ] -> ());
  mk_wrapper_method!(glDrawTransformFeedbackInstanced, DrawTransformFeedbackInstanced, [mode: GLenum, id: GLuint, instancecount: GLsizei, ] -> ());
  mk_wrapper_method!(glDrawTransformFeedbackStream, DrawTransformFeedbackStream, [mode: GLenum, id: GLuint, stream: GLuint, ] -> ());
  mk_wrapper_method!(glDrawTransformFeedbackStreamInstanced, DrawTransformFeedbackStreamInstanced, [mode: GLenum, id: GLuint, stream: GLuint, instancecount: GLsizei, ] -> ());
  mk_wrapper_method!(glEnable, Enable, [cap: GLenum, ] -> ());
  mk_wrapper_method!(glEnableVertexArrayAttrib, EnableVertexArrayAttrib, [vaobj: GLuint, index: GLuint, ] -> ());
  mk_wrapper_method!(glEnableVertexAttribArray, EnableVertexAttribArray, [index: GLuint, ] -> ());
  mk_wrapper_method!(glEnablei, Enablei, [target: GLenum, index: GLuint, ] -> ());
  mk_wrapper_method!(glEndConditionalRender, EndConditionalRender, [] -> ());
  mk_wrapper_method!(glEndQuery, EndQuery, [target: GLenum, ] -> ());
  mk_wrapper_method!(glEndQueryIndexed, EndQueryIndexed, [target: GLenum, index: GLuint, ] -> ());
  mk_wrapper_method!(glEndTransformFeedback, EndTransformFeedback, [] -> ());
  mk_wrapper_method!(glFenceSync, FenceSync, [condition: GLenum, flags: GLbitfield, ] -> GLsync);
  mk_wrapper_method!(glFinish, Finish, [] -> ());
  mk_wrapper_method!(glFlush, Flush, [] -> ());
  mk_wrapper_method!(glFlushMappedBufferRange, FlushMappedBufferRange, [target: GLenum, offset: GLintptr, length: GLsizeiptr, ] -> ());
  mk_wrapper_method!(glFlushMappedNamedBufferRange, FlushMappedNamedBufferRange, [buffer: GLuint, offset: GLintptr, length: GLsizeiptr, ] -> ());
  mk_wrapper_method!(glFramebufferParameteri, FramebufferParameteri, [target: GLenum, pname: GLenum, param: GLint, ] -> ());
  mk_wrapper_method!(glFramebufferRenderbuffer, FramebufferRenderbuffer, [target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint, ] -> ());
  mk_wrapper_method!(glFramebufferTexture, FramebufferTexture, [target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, ] -> ());
  mk_wrapper_method!(glFramebufferTexture1D, FramebufferTexture1D, [target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, ] -> ());
  mk_wrapper_method!(glFramebufferTexture2D, FramebufferTexture2D, [target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, ] -> ());
  mk_wrapper_method!(glFramebufferTexture3D, FramebufferTexture3D, [target: GLenum, attachment: GLenum, textarget: GLenum, texture: GLuint, level: GLint, zoffset: GLint, ] -> ());
  mk_wrapper_method!(glFramebufferTextureLayer, FramebufferTextureLayer, [target: GLenum, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint, ] -> ());
  mk_wrapper_method!(glFrontFace, FrontFace, [mode: GLenum, ] -> ());
  mk_wrapper_method!(glGenBuffers, GenBuffers, [n: GLsizei, buffers: *mut GLuint, ] -> ());
  mk_wrapper_method!(glGenFramebuffers, GenFramebuffers, [n: GLsizei, framebuffers: *mut GLuint, ] -> ());
  mk_wrapper_method!(glGenProgramPipelines, GenProgramPipelines, [n: GLsizei, pipelines: *mut GLuint, ] -> ());
  mk_wrapper_method!(glGenQueries, GenQueries, [n: GLsizei, ids: *mut GLuint, ] -> ());
  mk_wrapper_method!(glGenRenderbuffers, GenRenderbuffers, [n: GLsizei, renderbuffers: *mut GLuint, ] -> ());
  mk_wrapper_method!(glGenSamplers, GenSamplers, [count: GLsizei, samplers: *mut GLuint, ] -> ());
  mk_wrapper_method!(glGenTextures, GenTextures, [n: GLsizei, textures: *mut GLuint, ] -> ());
  mk_wrapper_method!(glGenTransformFeedbacks, GenTransformFeedbacks, [n: GLsizei, ids: *mut GLuint, ] -> ());
  mk_wrapper_method!(glGenVertexArrays, GenVertexArrays, [n: GLsizei, arrays: *mut GLuint, ] -> ());
  mk_wrapper_method!(glGenerateMipmap, GenerateMipmap, [target: GLenum, ] -> ());
  mk_wrapper_method!(glGenerateTextureMipmap, GenerateTextureMipmap, [texture: GLuint, ] -> ());
  mk_wrapper_method!(glGetActiveAtomicCounterBufferiv, GetActiveAtomicCounterBufferiv, [program: GLuint, bufferIndex: GLuint, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetActiveAttrib, GetActiveAttrib, [program: GLuint, index: GLuint, bufSize: GLsizei, length: *mut GLsizei, size: *mut GLint, ty: *mut GLenum, name: *mut GLchar, ] -> ());
  mk_wrapper_method!(glGetActiveSubroutineName, GetActiveSubroutineName, [program: GLuint, shadertype: GLenum, index: GLuint, bufSize: GLsizei, length: *mut GLsizei, name: *mut GLchar, ] -> ());
  mk_wrapper_method!(glGetActiveSubroutineUniformName, GetActiveSubroutineUniformName, [program: GLuint, shadertype: GLenum, index: GLuint, bufSize: GLsizei, length: *mut GLsizei, name: *mut GLchar, ] -> ());
  mk_wrapper_method!(glGetActiveSubroutineUniformiv, GetActiveSubroutineUniformiv, [program: GLuint, shadertype: GLenum, index: GLuint, pname: GLenum, values: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetActiveUniform, GetActiveUniform, [program: GLuint, index: GLuint, bufSize: GLsizei, length: *mut GLsizei, size: *mut GLint, ty: *mut GLenum, name: *mut GLchar, ] -> ());
  mk_wrapper_method!(glGetActiveUniformBlockName, GetActiveUniformBlockName, [program: GLuint, uniformBlockIndex: GLuint, bufSize: GLsizei, length: *mut GLsizei, uniformBlockName: *mut GLchar, ] -> ());
  mk_wrapper_method!(glGetActiveUniformBlockiv, GetActiveUniformBlockiv, [program: GLuint, uniformBlockIndex: GLuint, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetActiveUniformName, GetActiveUniformName, [program: GLuint, uniformIndex: GLuint, bufSize: GLsizei, length: *mut GLsizei, uniformName: *mut GLchar, ] -> ());
  mk_wrapper_method!(glGetActiveUniformsiv, GetActiveUniformsiv, [program: GLuint, uniformCount: GLsizei, uniformIndices: *const GLuint, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetAttachedShaders, GetAttachedShaders, [program: GLuint, maxCount: GLsizei, count: *mut GLsizei, shaders: *mut GLuint, ] -> ());
  mk_wrapper_method!(glGetAttribLocation, GetAttribLocation, [program: GLuint, name: *const GLchar, ] -> GLint);
  mk_wrapper_method!(glGetBooleani_v, GetBooleani_v, [target: GLenum, index: GLuint, data: *mut GLboolean, ] -> ());
  mk_wrapper_method!(glGetBooleanv, GetBooleanv, [pname: GLenum, data: *mut GLboolean, ] -> ());
  mk_wrapper_method!(glGetBufferParameteri64v, GetBufferParameteri64v, [target: GLenum, pname: GLenum, params: *mut GLint64, ] -> ());
  mk_wrapper_method!(glGetBufferParameteriv, GetBufferParameteriv, [target: GLenum, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetBufferPointerv, GetBufferPointerv, [target: GLenum, pname: GLenum, params: *mut *mut c_void, ] -> ());
  mk_wrapper_method!(glGetBufferSubData, GetBufferSubData, [target: GLenum, offset: GLintptr, size: GLsizeiptr, data: *mut c_void, ] -> ());
  mk_wrapper_method!(glGetCompressedTexImage, GetCompressedTexImage, [target: GLenum, level: GLint, img: *mut c_void, ] -> ());
  mk_wrapper_method!(glGetCompressedTextureImage, GetCompressedTextureImage, [texture: GLuint, level: GLint, bufSize: GLsizei, pixels: *mut c_void, ] -> ());
  mk_wrapper_method!(glGetCompressedTextureSubImage, GetCompressedTextureSubImage, [texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, bufSize: GLsizei, pixels: *mut c_void, ] -> ());
  mk_wrapper_method!(glGetDebugMessageLog, GetDebugMessageLog, [count: GLuint, bufSize: GLsizei, sources: *mut GLenum, types: *mut GLenum, ids: *mut GLuint, severities: *mut GLenum, lengths: *mut GLsizei, messageLog: *mut GLchar, ] -> GLuint);
  mk_wrapper_method!(glGetDebugMessageLogKHR, GetDebugMessageLogKHR, [count: GLuint, bufSize: GLsizei, sources: *mut GLenum, types: *mut GLenum, ids: *mut GLuint, severities: *mut GLenum, lengths: *mut GLsizei, messageLog: *mut GLchar, ] -> GLuint);
  mk_wrapper_method!(glGetDoublei_v, GetDoublei_v, [target: GLenum, index: GLuint, data: *mut GLdouble, ] -> ());
  mk_wrapper_method!(glGetDoublev, GetDoublev, [pname: GLenum, data: *mut GLdouble, ] -> ());
  mk_wrapper_method!(glGetError, GetError, [] -> GLenum);
  mk_wrapper_method!(glGetFloati_v, GetFloati_v, [target: GLenum, index: GLuint, data: *mut GLfloat, ] -> ());
  mk_wrapper_method!(glGetFloatv, GetFloatv, [pname: GLenum, data: *mut GLfloat, ] -> ());
  mk_wrapper_method!(glGetFragDataIndex, GetFragDataIndex, [program: GLuint, name: *const GLchar, ] -> GLint);
  mk_wrapper_method!(glGetFragDataLocation, GetFragDataLocation, [program: GLuint, name: *const GLchar, ] -> GLint);
  mk_wrapper_method!(glGetFramebufferAttachmentParameteriv, GetFramebufferAttachmentParameteriv, [target: GLenum, attachment: GLenum, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetFramebufferParameteriv, GetFramebufferParameteriv, [target: GLenum, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetGraphicsResetStatus, GetGraphicsResetStatus, [] -> GLenum);
  mk_wrapper_method!(glGetInteger64i_v, GetInteger64i_v, [target: GLenum, index: GLuint, data: *mut GLint64, ] -> ());
  mk_wrapper_method!(glGetInteger64v, GetInteger64v, [pname: GLenum, data: *mut GLint64, ] -> ());
  mk_wrapper_method!(glGetIntegeri_v, GetIntegeri_v, [target: GLenum, index: GLuint, data: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetIntegerv, GetIntegerv, [pname: GLenum, data: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetInternalformati64v, GetInternalformati64v, [target: GLenum, internalformat: GLenum, pname: GLenum, count: GLsizei, params: *mut GLint64, ] -> ());
  mk_wrapper_method!(glGetInternalformativ, GetInternalformativ, [target: GLenum, internalformat: GLenum, pname: GLenum, count: GLsizei, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetMultisamplefv, GetMultisamplefv, [pname: GLenum, index: GLuint, val: *mut GLfloat, ] -> ());
  mk_wrapper_method!(glGetNamedBufferParameteri64v, GetNamedBufferParameteri64v, [buffer: GLuint, pname: GLenum, params: *mut GLint64, ] -> ());
  mk_wrapper_method!(glGetNamedBufferParameteriv, GetNamedBufferParameteriv, [buffer: GLuint, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetNamedBufferPointerv, GetNamedBufferPointerv, [buffer: GLuint, pname: GLenum, params: *mut *mut c_void, ] -> ());
  mk_wrapper_method!(glGetNamedBufferSubData, GetNamedBufferSubData, [buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: *mut c_void, ] -> ());
  mk_wrapper_method!(glGetNamedFramebufferAttachmentParameteriv, GetNamedFramebufferAttachmentParameteriv, [framebuffer: GLuint, attachment: GLenum, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetNamedFramebufferParameteriv, GetNamedFramebufferParameteriv, [framebuffer: GLuint, pname: GLenum, param: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetNamedRenderbufferParameteriv, GetNamedRenderbufferParameteriv, [renderbuffer: GLuint, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetObjectLabel, GetObjectLabel, [identifier: GLenum, name: GLuint, bufSize: GLsizei, length: *mut GLsizei, label: *mut GLchar, ] -> ());
  mk_wrapper_method!(glGetObjectLabelKHR, GetObjectLabelKHR, [identifier: GLenum, name: GLuint, bufSize: GLsizei, length: *mut GLsizei, label: *mut GLchar, ] -> ());
  mk_wrapper_method!(glGetObjectPtrLabel, GetObjectPtrLabel, [ptr: *const c_void, bufSize: GLsizei, length: *mut GLsizei, label: *mut GLchar, ] -> ());
  mk_wrapper_method!(glGetObjectPtrLabelKHR, GetObjectPtrLabelKHR, [ptr: *const c_void, bufSize: GLsizei, length: *mut GLsizei, label: *mut GLchar, ] -> ());
  mk_wrapper_method!(glGetPointerv, GetPointerv, [pname: GLenum, params: *mut *mut c_void, ] -> ());
  mk_wrapper_method!(glGetPointervKHR, GetPointervKHR, [pname: GLenum, params: *mut *mut c_void, ] -> ());
  mk_wrapper_method!(glGetProgramBinary, GetProgramBinary, [program: GLuint, bufSize: GLsizei, length: *mut GLsizei, binaryFormat: *mut GLenum, binary: *mut c_void, ] -> ());
  mk_wrapper_method!(glGetProgramInfoLog, GetProgramInfoLog, [program: GLuint, bufSize: GLsizei, length: *mut GLsizei, infoLog: *mut GLchar, ] -> ());
  mk_wrapper_method!(glGetProgramInterfaceiv, GetProgramInterfaceiv, [program: GLuint, programInterface: GLenum, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetProgramPipelineInfoLog, GetProgramPipelineInfoLog, [pipeline: GLuint, bufSize: GLsizei, length: *mut GLsizei, infoLog: *mut GLchar, ] -> ());
  mk_wrapper_method!(glGetProgramPipelineiv, GetProgramPipelineiv, [pipeline: GLuint, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetProgramResourceIndex, GetProgramResourceIndex, [program: GLuint, programInterface: GLenum, name: *const GLchar, ] -> GLuint);
  mk_wrapper_method!(glGetProgramResourceLocation, GetProgramResourceLocation, [program: GLuint, programInterface: GLenum, name: *const GLchar, ] -> GLint);
  mk_wrapper_method!(glGetProgramResourceLocationIndex, GetProgramResourceLocationIndex, [program: GLuint, programInterface: GLenum, name: *const GLchar, ] -> GLint);
  mk_wrapper_method!(glGetProgramResourceName, GetProgramResourceName, [program: GLuint, programInterface: GLenum, index: GLuint, bufSize: GLsizei, length: *mut GLsizei, name: *mut GLchar, ] -> ());
  mk_wrapper_method!(glGetProgramResourceiv, GetProgramResourceiv, [program: GLuint, programInterface: GLenum, index: GLuint, propCount: GLsizei, props: *const GLenum, count: GLsizei, length: *mut GLsizei, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetProgramStageiv, GetProgramStageiv, [program: GLuint, shadertype: GLenum, pname: GLenum, values: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetProgramiv, GetProgramiv, [program: GLuint, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetQueryBufferObjecti64v, GetQueryBufferObjecti64v, [id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr, ] -> ());
  mk_wrapper_method!(glGetQueryBufferObjectiv, GetQueryBufferObjectiv, [id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr, ] -> ());
  mk_wrapper_method!(glGetQueryBufferObjectui64v, GetQueryBufferObjectui64v, [id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr, ] -> ());
  mk_wrapper_method!(glGetQueryBufferObjectuiv, GetQueryBufferObjectuiv, [id: GLuint, buffer: GLuint, pname: GLenum, offset: GLintptr, ] -> ());
  mk_wrapper_method!(glGetQueryIndexediv, GetQueryIndexediv, [target: GLenum, index: GLuint, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetQueryObjecti64v, GetQueryObjecti64v, [id: GLuint, pname: GLenum, params: *mut GLint64, ] -> ());
  mk_wrapper_method!(glGetQueryObjectiv, GetQueryObjectiv, [id: GLuint, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetQueryObjectui64v, GetQueryObjectui64v, [id: GLuint, pname: GLenum, params: *mut GLuint64, ] -> ());
  mk_wrapper_method!(glGetQueryObjectuiv, GetQueryObjectuiv, [id: GLuint, pname: GLenum, params: *mut GLuint, ] -> ());
  mk_wrapper_method!(glGetQueryiv, GetQueryiv, [target: GLenum, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetRenderbufferParameteriv, GetRenderbufferParameteriv, [target: GLenum, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetSamplerParameterIiv, GetSamplerParameterIiv, [sampler: GLuint, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetSamplerParameterIuiv, GetSamplerParameterIuiv, [sampler: GLuint, pname: GLenum, params: *mut GLuint, ] -> ());
  mk_wrapper_method!(glGetSamplerParameterfv, GetSamplerParameterfv, [sampler: GLuint, pname: GLenum, params: *mut GLfloat, ] -> ());
  mk_wrapper_method!(glGetSamplerParameteriv, GetSamplerParameteriv, [sampler: GLuint, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetShaderInfoLog, GetShaderInfoLog, [shader: GLuint, bufSize: GLsizei, length: *mut GLsizei, infoLog: *mut GLchar, ] -> ());
  mk_wrapper_method!(glGetShaderPrecisionFormat, GetShaderPrecisionFormat, [shadertype: GLenum, precisiontype: GLenum, range: *mut GLint, precision: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetShaderSource, GetShaderSource, [shader: GLuint, bufSize: GLsizei, length: *mut GLsizei, source: *mut GLchar, ] -> ());
  mk_wrapper_method!(glGetShaderiv, GetShaderiv, [shader: GLuint, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetString, GetString, [name: GLenum, ] -> *const GLubyte);
  mk_wrapper_method!(glGetStringi, GetStringi, [name: GLenum, index: GLuint, ] -> *const GLubyte);
  mk_wrapper_method!(glGetSubroutineIndex, GetSubroutineIndex, [program: GLuint, shadertype: GLenum, name: *const GLchar, ] -> GLuint);
  mk_wrapper_method!(glGetSubroutineUniformLocation, GetSubroutineUniformLocation, [program: GLuint, shadertype: GLenum, name: *const GLchar, ] -> GLint);
  mk_wrapper_method!(glGetSynciv, GetSynciv, [sync: GLsync, pname: GLenum, count: GLsizei, length: *mut GLsizei, values: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetTexImage, GetTexImage, [target: GLenum, level: GLint, format: GLenum, ty: GLenum, pixels: *mut c_void, ] -> ());
  mk_wrapper_method!(glGetTexLevelParameterfv, GetTexLevelParameterfv, [target: GLenum, level: GLint, pname: GLenum, params: *mut GLfloat, ] -> ());
  mk_wrapper_method!(glGetTexLevelParameteriv, GetTexLevelParameteriv, [target: GLenum, level: GLint, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetTexParameterIiv, GetTexParameterIiv, [target: GLenum, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetTexParameterIuiv, GetTexParameterIuiv, [target: GLenum, pname: GLenum, params: *mut GLuint, ] -> ());
  mk_wrapper_method!(glGetTexParameterfv, GetTexParameterfv, [target: GLenum, pname: GLenum, params: *mut GLfloat, ] -> ());
  mk_wrapper_method!(glGetTexParameteriv, GetTexParameteriv, [target: GLenum, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetTextureImage, GetTextureImage, [texture: GLuint, level: GLint, format: GLenum, ty: GLenum, bufSize: GLsizei, pixels: *mut c_void, ] -> ());
  mk_wrapper_method!(glGetTextureLevelParameterfv, GetTextureLevelParameterfv, [texture: GLuint, level: GLint, pname: GLenum, params: *mut GLfloat, ] -> ());
  mk_wrapper_method!(glGetTextureLevelParameteriv, GetTextureLevelParameteriv, [texture: GLuint, level: GLint, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetTextureParameterIiv, GetTextureParameterIiv, [texture: GLuint, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetTextureParameterIuiv, GetTextureParameterIuiv, [texture: GLuint, pname: GLenum, params: *mut GLuint, ] -> ());
  mk_wrapper_method!(glGetTextureParameterfv, GetTextureParameterfv, [texture: GLuint, pname: GLenum, params: *mut GLfloat, ] -> ());
  mk_wrapper_method!(glGetTextureParameteriv, GetTextureParameteriv, [texture: GLuint, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetTextureSubImage, GetTextureSubImage, [texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, ty: GLenum, bufSize: GLsizei, pixels: *mut c_void, ] -> ());
  mk_wrapper_method!(glGetTransformFeedbackVarying, GetTransformFeedbackVarying, [program: GLuint, index: GLuint, bufSize: GLsizei, length: *mut GLsizei, size: *mut GLsizei, ty: *mut GLenum, name: *mut GLchar, ] -> ());
  mk_wrapper_method!(glGetTransformFeedbacki64_v, GetTransformFeedbacki64_v, [xfb: GLuint, pname: GLenum, index: GLuint, param: *mut GLint64, ] -> ());
  mk_wrapper_method!(glGetTransformFeedbacki_v, GetTransformFeedbacki_v, [xfb: GLuint, pname: GLenum, index: GLuint, param: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetTransformFeedbackiv, GetTransformFeedbackiv, [xfb: GLuint, pname: GLenum, param: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetUniformBlockIndex, GetUniformBlockIndex, [program: GLuint, uniformBlockName: *const GLchar, ] -> GLuint);
  mk_wrapper_method!(glGetUniformIndices, GetUniformIndices, [program: GLuint, uniformCount: GLsizei, uniformNames: *const *const GLchar, uniformIndices: *mut GLuint, ] -> ());
  mk_wrapper_method!(glGetUniformLocation, GetUniformLocation, [program: GLuint, name: *const GLchar, ] -> GLint);
  mk_wrapper_method!(glGetUniformSubroutineuiv, GetUniformSubroutineuiv, [shadertype: GLenum, location: GLint, params: *mut GLuint, ] -> ());
  mk_wrapper_method!(glGetUniformdv, GetUniformdv, [program: GLuint, location: GLint, params: *mut GLdouble, ] -> ());
  mk_wrapper_method!(glGetUniformfv, GetUniformfv, [program: GLuint, location: GLint, params: *mut GLfloat, ] -> ());
  mk_wrapper_method!(glGetUniformiv, GetUniformiv, [program: GLuint, location: GLint, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetUniformuiv, GetUniformuiv, [program: GLuint, location: GLint, params: *mut GLuint, ] -> ());
  mk_wrapper_method!(glGetVertexArrayIndexed64iv, GetVertexArrayIndexed64iv, [vaobj: GLuint, index: GLuint, pname: GLenum, param: *mut GLint64, ] -> ());
  mk_wrapper_method!(glGetVertexArrayIndexediv, GetVertexArrayIndexediv, [vaobj: GLuint, index: GLuint, pname: GLenum, param: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetVertexArrayiv, GetVertexArrayiv, [vaobj: GLuint, pname: GLenum, param: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetVertexAttribIiv, GetVertexAttribIiv, [index: GLuint, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetVertexAttribIuiv, GetVertexAttribIuiv, [index: GLuint, pname: GLenum, params: *mut GLuint, ] -> ());
  mk_wrapper_method!(glGetVertexAttribLdv, GetVertexAttribLdv, [index: GLuint, pname: GLenum, params: *mut GLdouble, ] -> ());
  mk_wrapper_method!(glGetVertexAttribPointerv, GetVertexAttribPointerv, [index: GLuint, pname: GLenum, pointer: *mut *mut c_void, ] -> ());
  mk_wrapper_method!(glGetVertexAttribdv, GetVertexAttribdv, [index: GLuint, pname: GLenum, params: *mut GLdouble, ] -> ());
  mk_wrapper_method!(glGetVertexAttribfv, GetVertexAttribfv, [index: GLuint, pname: GLenum, params: *mut GLfloat, ] -> ());
  mk_wrapper_method!(glGetVertexAttribiv, GetVertexAttribiv, [index: GLuint, pname: GLenum, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetnColorTable, GetnColorTable, [target: GLenum, format: GLenum, ty: GLenum, bufSize: GLsizei, table: *mut c_void, ] -> ());
  mk_wrapper_method!(glGetnCompressedTexImage, GetnCompressedTexImage, [target: GLenum, lod: GLint, bufSize: GLsizei, pixels: *mut c_void, ] -> ());
  mk_wrapper_method!(glGetnConvolutionFilter, GetnConvolutionFilter, [target: GLenum, format: GLenum, ty: GLenum, bufSize: GLsizei, image: *mut c_void, ] -> ());
  mk_wrapper_method!(glGetnHistogram, GetnHistogram, [target: GLenum, reset: GLboolean, format: GLenum, ty: GLenum, bufSize: GLsizei, values: *mut c_void, ] -> ());
  mk_wrapper_method!(glGetnMapdv, GetnMapdv, [target: GLenum, query: GLenum, bufSize: GLsizei, v: *mut GLdouble, ] -> ());
  mk_wrapper_method!(glGetnMapfv, GetnMapfv, [target: GLenum, query: GLenum, bufSize: GLsizei, v: *mut GLfloat, ] -> ());
  mk_wrapper_method!(glGetnMapiv, GetnMapiv, [target: GLenum, query: GLenum, bufSize: GLsizei, v: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetnMinmax, GetnMinmax, [target: GLenum, reset: GLboolean, format: GLenum, ty: GLenum, bufSize: GLsizei, values: *mut c_void, ] -> ());
  mk_wrapper_method!(glGetnPixelMapfv, GetnPixelMapfv, [map: GLenum, bufSize: GLsizei, values: *mut GLfloat, ] -> ());
  mk_wrapper_method!(glGetnPixelMapuiv, GetnPixelMapuiv, [map: GLenum, bufSize: GLsizei, values: *mut GLuint, ] -> ());
  mk_wrapper_method!(glGetnPixelMapusv, GetnPixelMapusv, [map: GLenum, bufSize: GLsizei, values: *mut GLushort, ] -> ());
  mk_wrapper_method!(glGetnPolygonStipple, GetnPolygonStipple, [bufSize: GLsizei, pattern: *mut GLubyte, ] -> ());
  mk_wrapper_method!(glGetnSeparableFilter, GetnSeparableFilter, [target: GLenum, format: GLenum, ty: GLenum, rowBufSize: GLsizei, row: *mut c_void, columnBufSize: GLsizei, column: *mut c_void, span: *mut c_void, ] -> ());
  mk_wrapper_method!(glGetnTexImage, GetnTexImage, [target: GLenum, level: GLint, format: GLenum, ty: GLenum, bufSize: GLsizei, pixels: *mut c_void, ] -> ());
  mk_wrapper_method!(glGetnUniformdv, GetnUniformdv, [program: GLuint, location: GLint, bufSize: GLsizei, params: *mut GLdouble, ] -> ());
  mk_wrapper_method!(glGetnUniformfv, GetnUniformfv, [program: GLuint, location: GLint, bufSize: GLsizei, params: *mut GLfloat, ] -> ());
  mk_wrapper_method!(glGetnUniformiv, GetnUniformiv, [program: GLuint, location: GLint, bufSize: GLsizei, params: *mut GLint, ] -> ());
  mk_wrapper_method!(glGetnUniformuiv, GetnUniformuiv, [program: GLuint, location: GLint, bufSize: GLsizei, params: *mut GLuint, ] -> ());
  mk_wrapper_method!(glHint, Hint, [target: GLenum, mode: GLenum, ] -> ());
  mk_wrapper_method!(glInvalidateBufferData, InvalidateBufferData, [buffer: GLuint, ] -> ());
  mk_wrapper_method!(glInvalidateBufferSubData, InvalidateBufferSubData, [buffer: GLuint, offset: GLintptr, length: GLsizeiptr, ] -> ());
  mk_wrapper_method!(glInvalidateFramebuffer, InvalidateFramebuffer, [target: GLenum, numAttachments: GLsizei, attachments: *const GLenum, ] -> ());
  mk_wrapper_method!(glInvalidateNamedFramebufferData, InvalidateNamedFramebufferData, [framebuffer: GLuint, numAttachments: GLsizei, attachments: *const GLenum, ] -> ());
  mk_wrapper_method!(glInvalidateNamedFramebufferSubData, InvalidateNamedFramebufferSubData, [framebuffer: GLuint, numAttachments: GLsizei, attachments: *const GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, ] -> ());
  mk_wrapper_method!(glInvalidateSubFramebuffer, InvalidateSubFramebuffer, [target: GLenum, numAttachments: GLsizei, attachments: *const GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, ] -> ());
  mk_wrapper_method!(glInvalidateTexImage, InvalidateTexImage, [texture: GLuint, level: GLint, ] -> ());
  mk_wrapper_method!(glInvalidateTexSubImage, InvalidateTexSubImage, [texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, ] -> ());
  mk_wrapper_method!(glIsBuffer, IsBuffer, [buffer: GLuint, ] -> GLboolean);
  mk_wrapper_method!(glIsEnabled, IsEnabled, [cap: GLenum, ] -> GLboolean);
  mk_wrapper_method!(glIsEnabledi, IsEnabledi, [target: GLenum, index: GLuint, ] -> GLboolean);
  mk_wrapper_method!(glIsFramebuffer, IsFramebuffer, [framebuffer: GLuint, ] -> GLboolean);
  mk_wrapper_method!(glIsProgram, IsProgram, [program: GLuint, ] -> GLboolean);
  mk_wrapper_method!(glIsProgramPipeline, IsProgramPipeline, [pipeline: GLuint, ] -> GLboolean);
  mk_wrapper_method!(glIsQuery, IsQuery, [id: GLuint, ] -> GLboolean);
  mk_wrapper_method!(glIsRenderbuffer, IsRenderbuffer, [renderbuffer: GLuint, ] -> GLboolean);
  mk_wrapper_method!(glIsSampler, IsSampler, [sampler: GLuint, ] -> GLboolean);
  mk_wrapper_method!(glIsShader, IsShader, [shader: GLuint, ] -> GLboolean);
  mk_wrapper_method!(glIsSync, IsSync, [sync: GLsync, ] -> GLboolean);
  mk_wrapper_method!(glIsTexture, IsTexture, [texture: GLuint, ] -> GLboolean);
  mk_wrapper_method!(glIsTransformFeedback, IsTransformFeedback, [id: GLuint, ] -> GLboolean);
  mk_wrapper_method!(glIsVertexArray, IsVertexArray, [array: GLuint, ] -> GLboolean);
  mk_wrapper_method!(glLineWidth, LineWidth, [width: GLfloat, ] -> ());
  mk_wrapper_method!(glLinkProgram, LinkProgram, [program: GLuint, ] -> ());
  mk_wrapper_method!(glLogicOp, LogicOp, [opcode: GLenum, ] -> ());
  mk_wrapper_method!(glMapBuffer, MapBuffer, [target: GLenum, access: GLenum, ] -> *mut c_void);
  mk_wrapper_method!(glMapBufferRange, MapBufferRange, [target: GLenum, offset: GLintptr, length: GLsizeiptr, access: GLbitfield, ] -> *mut c_void);
  mk_wrapper_method!(glMapNamedBuffer, MapNamedBuffer, [buffer: GLuint, access: GLenum, ] -> *mut c_void);
  mk_wrapper_method!(glMapNamedBufferRange, MapNamedBufferRange, [buffer: GLuint, offset: GLintptr, length: GLsizeiptr, access: GLbitfield, ] -> *mut c_void);
  mk_wrapper_method!(glMemoryBarrier, MemoryBarrier, [barriers: GLbitfield, ] -> ());
  mk_wrapper_method!(glMemoryBarrierByRegion, MemoryBarrierByRegion, [barriers: GLbitfield, ] -> ());
  mk_wrapper_method!(glMinSampleShading, MinSampleShading, [value: GLfloat, ] -> ());
  mk_wrapper_method!(glMultiDrawArrays, MultiDrawArrays, [mode: GLenum, first: *const GLint, count: *const GLsizei, drawcount: GLsizei, ] -> ());
  mk_wrapper_method!(glMultiDrawArraysIndirect, MultiDrawArraysIndirect, [mode: GLenum, indirect: *const c_void, drawcount: GLsizei, stride: GLsizei, ] -> ());
  mk_wrapper_method!(glMultiDrawArraysIndirectCount, MultiDrawArraysIndirectCount, [mode: GLenum, indirect: *const c_void, drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei, ] -> ());
  mk_wrapper_method!(glMultiDrawElements, MultiDrawElements, [mode: GLenum, count: *const GLsizei, ty: GLenum, indices: *const *const c_void, drawcount: GLsizei, ] -> ());
  mk_wrapper_method!(glMultiDrawElementsBaseVertex, MultiDrawElementsBaseVertex, [mode: GLenum, count: *const GLsizei, ty: GLenum, indices: *const *const c_void, drawcount: GLsizei, basevertex: *const GLint, ] -> ());
  mk_wrapper_method!(glMultiDrawElementsIndirect, MultiDrawElementsIndirect, [mode: GLenum, ty: GLenum, indirect: *const c_void, drawcount: GLsizei, stride: GLsizei, ] -> ());
  mk_wrapper_method!(glMultiDrawElementsIndirectCount, MultiDrawElementsIndirectCount, [mode: GLenum, ty: GLenum, indirect: *const c_void, drawcount: GLintptr, maxdrawcount: GLsizei, stride: GLsizei, ] -> ());
  mk_wrapper_method!(glMultiTexCoordP1ui, MultiTexCoordP1ui, [texture: GLenum, ty: GLenum, coords: GLuint, ] -> ());
  mk_wrapper_method!(glMultiTexCoordP1uiv, MultiTexCoordP1uiv, [texture: GLenum, ty: GLenum, coords: *const GLuint, ] -> ());
  mk_wrapper_method!(glMultiTexCoordP2ui, MultiTexCoordP2ui, [texture: GLenum, ty: GLenum, coords: GLuint, ] -> ());
  mk_wrapper_method!(glMultiTexCoordP2uiv, MultiTexCoordP2uiv, [texture: GLenum, ty: GLenum, coords: *const GLuint, ] -> ());
  mk_wrapper_method!(glMultiTexCoordP3ui, MultiTexCoordP3ui, [texture: GLenum, ty: GLenum, coords: GLuint, ] -> ());
  mk_wrapper_method!(glMultiTexCoordP3uiv, MultiTexCoordP3uiv, [texture: GLenum, ty: GLenum, coords: *const GLuint, ] -> ());
  mk_wrapper_method!(glMultiTexCoordP4ui, MultiTexCoordP4ui, [texture: GLenum, ty: GLenum, coords: GLuint, ] -> ());
  mk_wrapper_method!(glMultiTexCoordP4uiv, MultiTexCoordP4uiv, [texture: GLenum, ty: GLenum, coords: *const GLuint, ] -> ());
  mk_wrapper_method!(glNamedBufferData, NamedBufferData, [buffer: GLuint, size: GLsizeiptr, data: *const c_void, usage: GLenum, ] -> ());
  mk_wrapper_method!(glNamedBufferStorage, NamedBufferStorage, [buffer: GLuint, size: GLsizeiptr, data: *const c_void, flags: GLbitfield, ] -> ());
  mk_wrapper_method!(glNamedBufferSubData, NamedBufferSubData, [buffer: GLuint, offset: GLintptr, size: GLsizeiptr, data: *const c_void, ] -> ());
  mk_wrapper_method!(glNamedFramebufferDrawBuffer, NamedFramebufferDrawBuffer, [framebuffer: GLuint, buf: GLenum, ] -> ());
  mk_wrapper_method!(glNamedFramebufferDrawBuffers, NamedFramebufferDrawBuffers, [framebuffer: GLuint, n: GLsizei, bufs: *const GLenum, ] -> ());
  mk_wrapper_method!(glNamedFramebufferParameteri, NamedFramebufferParameteri, [framebuffer: GLuint, pname: GLenum, param: GLint, ] -> ());
  mk_wrapper_method!(glNamedFramebufferReadBuffer, NamedFramebufferReadBuffer, [framebuffer: GLuint, src: GLenum, ] -> ());
  mk_wrapper_method!(glNamedFramebufferRenderbuffer, NamedFramebufferRenderbuffer, [framebuffer: GLuint, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: GLuint, ] -> ());
  mk_wrapper_method!(glNamedFramebufferTexture, NamedFramebufferTexture, [framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint, ] -> ());
  mk_wrapper_method!(glNamedFramebufferTextureLayer, NamedFramebufferTextureLayer, [framebuffer: GLuint, attachment: GLenum, texture: GLuint, level: GLint, layer: GLint, ] -> ());
  mk_wrapper_method!(glNamedRenderbufferStorage, NamedRenderbufferStorage, [renderbuffer: GLuint, internalformat: GLenum, width: GLsizei, height: GLsizei, ] -> ());
  mk_wrapper_method!(glNamedRenderbufferStorageMultisample, NamedRenderbufferStorageMultisample, [renderbuffer: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, ] -> ());
  mk_wrapper_method!(glNormalP3ui, NormalP3ui, [ty: GLenum, coords: GLuint, ] -> ());
  mk_wrapper_method!(glNormalP3uiv, NormalP3uiv, [ty: GLenum, coords: *const GLuint, ] -> ());
  mk_wrapper_method!(glObjectLabel, ObjectLabel, [identifier: GLenum, name: GLuint, length: GLsizei, label: *const GLchar, ] -> ());
  mk_wrapper_method!(glObjectLabelKHR, ObjectLabelKHR, [identifier: GLenum, name: GLuint, length: GLsizei, label: *const GLchar, ] -> ());
  mk_wrapper_method!(glObjectPtrLabel, ObjectPtrLabel, [ptr: *const c_void, length: GLsizei, label: *const GLchar, ] -> ());
  mk_wrapper_method!(glObjectPtrLabelKHR, ObjectPtrLabelKHR, [ptr: *const c_void, length: GLsizei, label: *const GLchar, ] -> ());
  mk_wrapper_method!(glPatchParameterfv, PatchParameterfv, [pname: GLenum, values: *const GLfloat, ] -> ());
  mk_wrapper_method!(glPatchParameteri, PatchParameteri, [pname: GLenum, value: GLint, ] -> ());
  mk_wrapper_method!(glPauseTransformFeedback, PauseTransformFeedback, [] -> ());
  mk_wrapper_method!(glPixelStoref, PixelStoref, [pname: GLenum, param: GLfloat, ] -> ());
  mk_wrapper_method!(glPixelStorei, PixelStorei, [pname: GLenum, param: GLint, ] -> ());
  mk_wrapper_method!(glPointParameterf, PointParameterf, [pname: GLenum, param: GLfloat, ] -> ());
  mk_wrapper_method!(glPointParameterfv, PointParameterfv, [pname: GLenum, params: *const GLfloat, ] -> ());
  mk_wrapper_method!(glPointParameteri, PointParameteri, [pname: GLenum, param: GLint, ] -> ());
  mk_wrapper_method!(glPointParameteriv, PointParameteriv, [pname: GLenum, params: *const GLint, ] -> ());
  mk_wrapper_method!(glPointSize, PointSize, [size: GLfloat, ] -> ());
  mk_wrapper_method!(glPolygonMode, PolygonMode, [face: GLenum, mode: GLenum, ] -> ());
  mk_wrapper_method!(glPolygonOffset, PolygonOffset, [factor: GLfloat, units: GLfloat, ] -> ());
  mk_wrapper_method!(glPolygonOffsetClamp, PolygonOffsetClamp, [factor: GLfloat, units: GLfloat, clamp: GLfloat, ] -> ());
  mk_wrapper_method!(glPopDebugGroup, PopDebugGroup, [] -> ());
  mk_wrapper_method!(glPopDebugGroupKHR, PopDebugGroupKHR, [] -> ());
  mk_wrapper_method!(glPrimitiveBoundingBox, PrimitiveBoundingBox, [minX: GLfloat, minY: GLfloat, minZ: GLfloat, minW: GLfloat, maxX: GLfloat, maxY: GLfloat, maxZ: GLfloat, maxW: GLfloat, ] -> ());
  mk_wrapper_method!(glPrimitiveRestartIndex, PrimitiveRestartIndex, [index: GLuint, ] -> ());
  mk_wrapper_method!(glProgramBinary, ProgramBinary, [program: GLuint, binaryFormat: GLenum, binary: *const c_void, length: GLsizei, ] -> ());
  mk_wrapper_method!(glProgramParameteri, ProgramParameteri, [program: GLuint, pname: GLenum, value: GLint, ] -> ());
  mk_wrapper_method!(glProgramUniform1d, ProgramUniform1d, [program: GLuint, location: GLint, v0: GLdouble, ] -> ());
  mk_wrapper_method!(glProgramUniform1dv, ProgramUniform1dv, [program: GLuint, location: GLint, count: GLsizei, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glProgramUniform1f, ProgramUniform1f, [program: GLuint, location: GLint, v0: GLfloat, ] -> ());
  mk_wrapper_method!(glProgramUniform1fv, ProgramUniform1fv, [program: GLuint, location: GLint, count: GLsizei, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glProgramUniform1i, ProgramUniform1i, [program: GLuint, location: GLint, v0: GLint, ] -> ());
  mk_wrapper_method!(glProgramUniform1iv, ProgramUniform1iv, [program: GLuint, location: GLint, count: GLsizei, value: *const GLint, ] -> ());
  mk_wrapper_method!(glProgramUniform1ui, ProgramUniform1ui, [program: GLuint, location: GLint, v0: GLuint, ] -> ());
  mk_wrapper_method!(glProgramUniform1uiv, ProgramUniform1uiv, [program: GLuint, location: GLint, count: GLsizei, value: *const GLuint, ] -> ());
  mk_wrapper_method!(glProgramUniform2d, ProgramUniform2d, [program: GLuint, location: GLint, v0: GLdouble, v1: GLdouble, ] -> ());
  mk_wrapper_method!(glProgramUniform2dv, ProgramUniform2dv, [program: GLuint, location: GLint, count: GLsizei, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glProgramUniform2f, ProgramUniform2f, [program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, ] -> ());
  mk_wrapper_method!(glProgramUniform2fv, ProgramUniform2fv, [program: GLuint, location: GLint, count: GLsizei, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glProgramUniform2i, ProgramUniform2i, [program: GLuint, location: GLint, v0: GLint, v1: GLint, ] -> ());
  mk_wrapper_method!(glProgramUniform2iv, ProgramUniform2iv, [program: GLuint, location: GLint, count: GLsizei, value: *const GLint, ] -> ());
  mk_wrapper_method!(glProgramUniform2ui, ProgramUniform2ui, [program: GLuint, location: GLint, v0: GLuint, v1: GLuint, ] -> ());
  mk_wrapper_method!(glProgramUniform2uiv, ProgramUniform2uiv, [program: GLuint, location: GLint, count: GLsizei, value: *const GLuint, ] -> ());
  mk_wrapper_method!(glProgramUniform3d, ProgramUniform3d, [program: GLuint, location: GLint, v0: GLdouble, v1: GLdouble, v2: GLdouble, ] -> ());
  mk_wrapper_method!(glProgramUniform3dv, ProgramUniform3dv, [program: GLuint, location: GLint, count: GLsizei, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glProgramUniform3f, ProgramUniform3f, [program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, ] -> ());
  mk_wrapper_method!(glProgramUniform3fv, ProgramUniform3fv, [program: GLuint, location: GLint, count: GLsizei, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glProgramUniform3i, ProgramUniform3i, [program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint, ] -> ());
  mk_wrapper_method!(glProgramUniform3iv, ProgramUniform3iv, [program: GLuint, location: GLint, count: GLsizei, value: *const GLint, ] -> ());
  mk_wrapper_method!(glProgramUniform3ui, ProgramUniform3ui, [program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, ] -> ());
  mk_wrapper_method!(glProgramUniform3uiv, ProgramUniform3uiv, [program: GLuint, location: GLint, count: GLsizei, value: *const GLuint, ] -> ());
  mk_wrapper_method!(glProgramUniform4d, ProgramUniform4d, [program: GLuint, location: GLint, v0: GLdouble, v1: GLdouble, v2: GLdouble, v3: GLdouble, ] -> ());
  mk_wrapper_method!(glProgramUniform4dv, ProgramUniform4dv, [program: GLuint, location: GLint, count: GLsizei, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glProgramUniform4f, ProgramUniform4f, [program: GLuint, location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat, ] -> ());
  mk_wrapper_method!(glProgramUniform4fv, ProgramUniform4fv, [program: GLuint, location: GLint, count: GLsizei, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glProgramUniform4i, ProgramUniform4i, [program: GLuint, location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint, ] -> ());
  mk_wrapper_method!(glProgramUniform4iv, ProgramUniform4iv, [program: GLuint, location: GLint, count: GLsizei, value: *const GLint, ] -> ());
  mk_wrapper_method!(glProgramUniform4ui, ProgramUniform4ui, [program: GLuint, location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint, ] -> ());
  mk_wrapper_method!(glProgramUniform4uiv, ProgramUniform4uiv, [program: GLuint, location: GLint, count: GLsizei, value: *const GLuint, ] -> ());
  mk_wrapper_method!(glProgramUniformMatrix2dv, ProgramUniformMatrix2dv, [program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glProgramUniformMatrix2fv, ProgramUniformMatrix2fv, [program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glProgramUniformMatrix2x3dv, ProgramUniformMatrix2x3dv, [program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glProgramUniformMatrix2x3fv, ProgramUniformMatrix2x3fv, [program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glProgramUniformMatrix2x4dv, ProgramUniformMatrix2x4dv, [program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glProgramUniformMatrix2x4fv, ProgramUniformMatrix2x4fv, [program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glProgramUniformMatrix3dv, ProgramUniformMatrix3dv, [program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glProgramUniformMatrix3fv, ProgramUniformMatrix3fv, [program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glProgramUniformMatrix3x2dv, ProgramUniformMatrix3x2dv, [program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glProgramUniformMatrix3x2fv, ProgramUniformMatrix3x2fv, [program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glProgramUniformMatrix3x4dv, ProgramUniformMatrix3x4dv, [program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glProgramUniformMatrix3x4fv, ProgramUniformMatrix3x4fv, [program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glProgramUniformMatrix4dv, ProgramUniformMatrix4dv, [program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glProgramUniformMatrix4fv, ProgramUniformMatrix4fv, [program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glProgramUniformMatrix4x2dv, ProgramUniformMatrix4x2dv, [program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glProgramUniformMatrix4x2fv, ProgramUniformMatrix4x2fv, [program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glProgramUniformMatrix4x3dv, ProgramUniformMatrix4x3dv, [program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glProgramUniformMatrix4x3fv, ProgramUniformMatrix4x3fv, [program: GLuint, location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glProvokingVertex, ProvokingVertex, [mode: GLenum, ] -> ());
  mk_wrapper_method!(glPushDebugGroup, PushDebugGroup, [source: GLenum, id: GLuint, length: GLsizei, message: *const GLchar, ] -> ());
  mk_wrapper_method!(glPushDebugGroupKHR, PushDebugGroupKHR, [source: GLenum, id: GLuint, length: GLsizei, message: *const GLchar, ] -> ());
  mk_wrapper_method!(glQueryCounter, QueryCounter, [id: GLuint, target: GLenum, ] -> ());
  mk_wrapper_method!(glReadBuffer, ReadBuffer, [src: GLenum, ] -> ());
  mk_wrapper_method!(glReadPixels, ReadPixels, [x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, ty: GLenum, pixels: *mut c_void, ] -> ());
  mk_wrapper_method!(glReadnPixels, ReadnPixels, [x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, ty: GLenum, bufSize: GLsizei, data: *mut c_void, ] -> ());
  mk_wrapper_method!(glReleaseShaderCompiler, ReleaseShaderCompiler, [] -> ());
  mk_wrapper_method!(glRenderbufferStorage, RenderbufferStorage, [target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei, ] -> ());
  mk_wrapper_method!(glRenderbufferStorageMultisample, RenderbufferStorageMultisample, [target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, ] -> ());
  mk_wrapper_method!(glResumeTransformFeedback, ResumeTransformFeedback, [] -> ());
  mk_wrapper_method!(glSampleCoverage, SampleCoverage, [value: GLfloat, invert: GLboolean, ] -> ());
  mk_wrapper_method!(glSampleMaski, SampleMaski, [maskNumber: GLuint, mask: GLbitfield, ] -> ());
  mk_wrapper_method!(glSamplerParameterIiv, SamplerParameterIiv, [sampler: GLuint, pname: GLenum, param: *const GLint, ] -> ());
  mk_wrapper_method!(glSamplerParameterIuiv, SamplerParameterIuiv, [sampler: GLuint, pname: GLenum, param: *const GLuint, ] -> ());
  mk_wrapper_method!(glSamplerParameterf, SamplerParameterf, [sampler: GLuint, pname: GLenum, param: GLfloat, ] -> ());
  mk_wrapper_method!(glSamplerParameterfv, SamplerParameterfv, [sampler: GLuint, pname: GLenum, param: *const GLfloat, ] -> ());
  mk_wrapper_method!(glSamplerParameteri, SamplerParameteri, [sampler: GLuint, pname: GLenum, param: GLint, ] -> ());
  mk_wrapper_method!(glSamplerParameteriv, SamplerParameteriv, [sampler: GLuint, pname: GLenum, param: *const GLint, ] -> ());
  mk_wrapper_method!(glScissor, Scissor, [x: GLint, y: GLint, width: GLsizei, height: GLsizei, ] -> ());
  mk_wrapper_method!(glScissorArrayv, ScissorArrayv, [first: GLuint, count: GLsizei, v: *const GLint, ] -> ());
  mk_wrapper_method!(glScissorIndexed, ScissorIndexed, [index: GLuint, left: GLint, bottom: GLint, width: GLsizei, height: GLsizei, ] -> ());
  mk_wrapper_method!(glScissorIndexedv, ScissorIndexedv, [index: GLuint, v: *const GLint, ] -> ());
  mk_wrapper_method!(glSecondaryColorP3ui, SecondaryColorP3ui, [ty: GLenum, color: GLuint, ] -> ());
  mk_wrapper_method!(glSecondaryColorP3uiv, SecondaryColorP3uiv, [ty: GLenum, color: *const GLuint, ] -> ());
  mk_wrapper_method!(glShaderBinary, ShaderBinary, [count: GLsizei, shaders: *const GLuint, binaryFormat: GLenum, binary: *const c_void, length: GLsizei, ] -> ());
  mk_wrapper_method!(glShaderSource, ShaderSource, [shader: GLuint, count: GLsizei, string: *const *const GLchar, length: *const GLint, ] -> ());
  mk_wrapper_method!(glShaderStorageBlockBinding, ShaderStorageBlockBinding, [program: GLuint, storageBlockIndex: GLuint, storageBlockBinding: GLuint, ] -> ());
  mk_wrapper_method!(glSpecializeShader, SpecializeShader, [shader: GLuint, pEntryPoint: *const GLchar, numSpecializationConstants: GLuint, pConstantIndex: *const GLuint, pConstantValue: *const GLuint, ] -> ());
  mk_wrapper_method!(glStencilFunc, StencilFunc, [func: GLenum, reference: GLint, mask: GLuint, ] -> ());
  mk_wrapper_method!(glStencilFuncSeparate, StencilFuncSeparate, [face: GLenum, func: GLenum, reference: GLint, mask: GLuint, ] -> ());
  mk_wrapper_method!(glStencilMask, StencilMask, [mask: GLuint, ] -> ());
  mk_wrapper_method!(glStencilMaskSeparate, StencilMaskSeparate, [face: GLenum, mask: GLuint, ] -> ());
  mk_wrapper_method!(glStencilOp, StencilOp, [fail: GLenum, zfail: GLenum, zpass: GLenum, ] -> ());
  mk_wrapper_method!(glStencilOpSeparate, StencilOpSeparate, [face: GLenum, sfail: GLenum, dpfail: GLenum, dppass: GLenum, ] -> ());
  mk_wrapper_method!(glTexBuffer, TexBuffer, [target: GLenum, internalformat: GLenum, buffer: GLuint, ] -> ());
  mk_wrapper_method!(glTexBufferRange, TexBufferRange, [target: GLenum, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr, ] -> ());
  mk_wrapper_method!(glTexCoordP1ui, TexCoordP1ui, [ty: GLenum, coords: GLuint, ] -> ());
  mk_wrapper_method!(glTexCoordP1uiv, TexCoordP1uiv, [ty: GLenum, coords: *const GLuint, ] -> ());
  mk_wrapper_method!(glTexCoordP2ui, TexCoordP2ui, [ty: GLenum, coords: GLuint, ] -> ());
  mk_wrapper_method!(glTexCoordP2uiv, TexCoordP2uiv, [ty: GLenum, coords: *const GLuint, ] -> ());
  mk_wrapper_method!(glTexCoordP3ui, TexCoordP3ui, [ty: GLenum, coords: GLuint, ] -> ());
  mk_wrapper_method!(glTexCoordP3uiv, TexCoordP3uiv, [ty: GLenum, coords: *const GLuint, ] -> ());
  mk_wrapper_method!(glTexCoordP4ui, TexCoordP4ui, [ty: GLenum, coords: GLuint, ] -> ());
  mk_wrapper_method!(glTexCoordP4uiv, TexCoordP4uiv, [ty: GLenum, coords: *const GLuint, ] -> ());
  mk_wrapper_method!(glTexImage1D, TexImage1D, [target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, border: GLint, format: GLenum, ty: GLenum, pixels: *const c_void, ] -> ());
  mk_wrapper_method!(glTexImage2D, TexImage2D, [target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, ty: GLenum, pixels: *const c_void, ] -> ());
  mk_wrapper_method!(glTexImage2DMultisample, TexImage2DMultisample, [target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean, ] -> ());
  mk_wrapper_method!(glTexImage3D, TexImage3D, [target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, ty: GLenum, pixels: *const c_void, ] -> ());
  mk_wrapper_method!(glTexImage3DMultisample, TexImage3DMultisample, [target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean, ] -> ());
  mk_wrapper_method!(glTexParameterIiv, TexParameterIiv, [target: GLenum, pname: GLenum, params: *const GLint, ] -> ());
  mk_wrapper_method!(glTexParameterIuiv, TexParameterIuiv, [target: GLenum, pname: GLenum, params: *const GLuint, ] -> ());
  mk_wrapper_method!(glTexParameterf, TexParameterf, [target: GLenum, pname: GLenum, param: GLfloat, ] -> ());
  mk_wrapper_method!(glTexParameterfv, TexParameterfv, [target: GLenum, pname: GLenum, params: *const GLfloat, ] -> ());
  mk_wrapper_method!(glTexParameteri, TexParameteri, [target: GLenum, pname: GLenum, param: GLint, ] -> ());
  mk_wrapper_method!(glTexParameteriv, TexParameteriv, [target: GLenum, pname: GLenum, params: *const GLint, ] -> ());
  mk_wrapper_method!(glTexStorage1D, TexStorage1D, [target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, ] -> ());
  mk_wrapper_method!(glTexStorage2D, TexStorage2D, [target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, ] -> ());
  mk_wrapper_method!(glTexStorage2DMultisample, TexStorage2DMultisample, [target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean, ] -> ());
  mk_wrapper_method!(glTexStorage3D, TexStorage3D, [target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, ] -> ());
  mk_wrapper_method!(glTexStorage3DMultisample, TexStorage3DMultisample, [target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean, ] -> ());
  mk_wrapper_method!(glTexSubImage1D, TexSubImage1D, [target: GLenum, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, ty: GLenum, pixels: *const c_void, ] -> ());
  mk_wrapper_method!(glTexSubImage2D, TexSubImage2D, [target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, ty: GLenum, pixels: *const c_void, ] -> ());
  mk_wrapper_method!(glTexSubImage3D, TexSubImage3D, [target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, ty: GLenum, pixels: *const c_void, ] -> ());
  mk_wrapper_method!(glTextureBarrier, TextureBarrier, [] -> ());
  mk_wrapper_method!(glTextureBuffer, TextureBuffer, [texture: GLuint, internalformat: GLenum, buffer: GLuint, ] -> ());
  mk_wrapper_method!(glTextureBufferRange, TextureBufferRange, [texture: GLuint, internalformat: GLenum, buffer: GLuint, offset: GLintptr, size: GLsizeiptr, ] -> ());
  mk_wrapper_method!(glTextureParameterIiv, TextureParameterIiv, [texture: GLuint, pname: GLenum, params: *const GLint, ] -> ());
  mk_wrapper_method!(glTextureParameterIuiv, TextureParameterIuiv, [texture: GLuint, pname: GLenum, params: *const GLuint, ] -> ());
  mk_wrapper_method!(glTextureParameterf, TextureParameterf, [texture: GLuint, pname: GLenum, param: GLfloat, ] -> ());
  mk_wrapper_method!(glTextureParameterfv, TextureParameterfv, [texture: GLuint, pname: GLenum, param: *const GLfloat, ] -> ());
  mk_wrapper_method!(glTextureParameteri, TextureParameteri, [texture: GLuint, pname: GLenum, param: GLint, ] -> ());
  mk_wrapper_method!(glTextureParameteriv, TextureParameteriv, [texture: GLuint, pname: GLenum, param: *const GLint, ] -> ());
  mk_wrapper_method!(glTextureStorage1D, TextureStorage1D, [texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei, ] -> ());
  mk_wrapper_method!(glTextureStorage2D, TextureStorage2D, [texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, ] -> ());
  mk_wrapper_method!(glTextureStorage2DMultisample, TextureStorage2DMultisample, [texture: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, fixedsamplelocations: GLboolean, ] -> ());
  mk_wrapper_method!(glTextureStorage3D, TextureStorage3D, [texture: GLuint, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, ] -> ());
  mk_wrapper_method!(glTextureStorage3DMultisample, TextureStorage3DMultisample, [texture: GLuint, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, fixedsamplelocations: GLboolean, ] -> ());
  mk_wrapper_method!(glTextureSubImage1D, TextureSubImage1D, [texture: GLuint, level: GLint, xoffset: GLint, width: GLsizei, format: GLenum, ty: GLenum, pixels: *const c_void, ] -> ());
  mk_wrapper_method!(glTextureSubImage2D, TextureSubImage2D, [texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, ty: GLenum, pixels: *const c_void, ] -> ());
  mk_wrapper_method!(glTextureSubImage3D, TextureSubImage3D, [texture: GLuint, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, ty: GLenum, pixels: *const c_void, ] -> ());
  mk_wrapper_method!(glTextureView, TextureView, [texture: GLuint, target: GLenum, origtexture: GLuint, internalformat: GLenum, minlevel: GLuint, numlevels: GLuint, minlayer: GLuint, numlayers: GLuint, ] -> ());
  mk_wrapper_method!(glTransformFeedbackBufferBase, TransformFeedbackBufferBase, [xfb: GLuint, index: GLuint, buffer: GLuint, ] -> ());
  mk_wrapper_method!(glTransformFeedbackBufferRange, TransformFeedbackBufferRange, [xfb: GLuint, index: GLuint, buffer: GLuint, offset: GLintptr, size: GLsizeiptr, ] -> ());
  mk_wrapper_method!(glTransformFeedbackVaryings, TransformFeedbackVaryings, [program: GLuint, count: GLsizei, varyings: *const *const GLchar, bufferMode: GLenum, ] -> ());
  mk_wrapper_method!(glUniform1d, Uniform1d, [location: GLint, x: GLdouble, ] -> ());
  mk_wrapper_method!(glUniform1dv, Uniform1dv, [location: GLint, count: GLsizei, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glUniform1f, Uniform1f, [location: GLint, v0: GLfloat, ] -> ());
  mk_wrapper_method!(glUniform1fv, Uniform1fv, [location: GLint, count: GLsizei, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glUniform1i, Uniform1i, [location: GLint, v0: GLint, ] -> ());
  mk_wrapper_method!(glUniform1iv, Uniform1iv, [location: GLint, count: GLsizei, value: *const GLint, ] -> ());
  mk_wrapper_method!(glUniform1ui, Uniform1ui, [location: GLint, v0: GLuint, ] -> ());
  mk_wrapper_method!(glUniform1uiv, Uniform1uiv, [location: GLint, count: GLsizei, value: *const GLuint, ] -> ());
  mk_wrapper_method!(glUniform2d, Uniform2d, [location: GLint, x: GLdouble, y: GLdouble, ] -> ());
  mk_wrapper_method!(glUniform2dv, Uniform2dv, [location: GLint, count: GLsizei, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glUniform2f, Uniform2f, [location: GLint, v0: GLfloat, v1: GLfloat, ] -> ());
  mk_wrapper_method!(glUniform2fv, Uniform2fv, [location: GLint, count: GLsizei, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glUniform2i, Uniform2i, [location: GLint, v0: GLint, v1: GLint, ] -> ());
  mk_wrapper_method!(glUniform2iv, Uniform2iv, [location: GLint, count: GLsizei, value: *const GLint, ] -> ());
  mk_wrapper_method!(glUniform2ui, Uniform2ui, [location: GLint, v0: GLuint, v1: GLuint, ] -> ());
  mk_wrapper_method!(glUniform2uiv, Uniform2uiv, [location: GLint, count: GLsizei, value: *const GLuint, ] -> ());
  mk_wrapper_method!(glUniform3d, Uniform3d, [location: GLint, x: GLdouble, y: GLdouble, z: GLdouble, ] -> ());
  mk_wrapper_method!(glUniform3dv, Uniform3dv, [location: GLint, count: GLsizei, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glUniform3f, Uniform3f, [location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, ] -> ());
  mk_wrapper_method!(glUniform3fv, Uniform3fv, [location: GLint, count: GLsizei, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glUniform3i, Uniform3i, [location: GLint, v0: GLint, v1: GLint, v2: GLint, ] -> ());
  mk_wrapper_method!(glUniform3iv, Uniform3iv, [location: GLint, count: GLsizei, value: *const GLint, ] -> ());
  mk_wrapper_method!(glUniform3ui, Uniform3ui, [location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, ] -> ());
  mk_wrapper_method!(glUniform3uiv, Uniform3uiv, [location: GLint, count: GLsizei, value: *const GLuint, ] -> ());
  mk_wrapper_method!(glUniform4d, Uniform4d, [location: GLint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble, ] -> ());
  mk_wrapper_method!(glUniform4dv, Uniform4dv, [location: GLint, count: GLsizei, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glUniform4f, Uniform4f, [location: GLint, v0: GLfloat, v1: GLfloat, v2: GLfloat, v3: GLfloat, ] -> ());
  mk_wrapper_method!(glUniform4fv, Uniform4fv, [location: GLint, count: GLsizei, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glUniform4i, Uniform4i, [location: GLint, v0: GLint, v1: GLint, v2: GLint, v3: GLint, ] -> ());
  mk_wrapper_method!(glUniform4iv, Uniform4iv, [location: GLint, count: GLsizei, value: *const GLint, ] -> ());
  mk_wrapper_method!(glUniform4ui, Uniform4ui, [location: GLint, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint, ] -> ());
  mk_wrapper_method!(glUniform4uiv, Uniform4uiv, [location: GLint, count: GLsizei, value: *const GLuint, ] -> ());
  mk_wrapper_method!(glUniformBlockBinding, UniformBlockBinding, [program: GLuint, uniformBlockIndex: GLuint, uniformBlockBinding: GLuint, ] -> ());
  mk_wrapper_method!(glUniformMatrix2dv, UniformMatrix2dv, [location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glUniformMatrix2fv, UniformMatrix2fv, [location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glUniformMatrix2x3dv, UniformMatrix2x3dv, [location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glUniformMatrix2x3fv, UniformMatrix2x3fv, [location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glUniformMatrix2x4dv, UniformMatrix2x4dv, [location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glUniformMatrix2x4fv, UniformMatrix2x4fv, [location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glUniformMatrix3dv, UniformMatrix3dv, [location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glUniformMatrix3fv, UniformMatrix3fv, [location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glUniformMatrix3x2dv, UniformMatrix3x2dv, [location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glUniformMatrix3x2fv, UniformMatrix3x2fv, [location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glUniformMatrix3x4dv, UniformMatrix3x4dv, [location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glUniformMatrix3x4fv, UniformMatrix3x4fv, [location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glUniformMatrix4dv, UniformMatrix4dv, [location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glUniformMatrix4fv, UniformMatrix4fv, [location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glUniformMatrix4x2dv, UniformMatrix4x2dv, [location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glUniformMatrix4x2fv, UniformMatrix4x2fv, [location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glUniformMatrix4x3dv, UniformMatrix4x3dv, [location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLdouble, ] -> ());
  mk_wrapper_method!(glUniformMatrix4x3fv, UniformMatrix4x3fv, [location: GLint, count: GLsizei, transpose: GLboolean, value: *const GLfloat, ] -> ());
  mk_wrapper_method!(glUniformSubroutinesuiv, UniformSubroutinesuiv, [shadertype: GLenum, count: GLsizei, indices: *const GLuint, ] -> ());
  mk_wrapper_method!(glUnmapBuffer, UnmapBuffer, [target: GLenum, ] -> GLboolean);
  mk_wrapper_method!(glUnmapNamedBuffer, UnmapNamedBuffer, [buffer: GLuint, ] -> GLboolean);
  mk_wrapper_method!(glUseProgram, UseProgram, [program: GLuint, ] -> ());
  mk_wrapper_method!(glUseProgramStages, UseProgramStages, [pipeline: GLuint, stages: GLbitfield, program: GLuint, ] -> ());
  mk_wrapper_method!(glValidateProgram, ValidateProgram, [program: GLuint, ] -> ());
  mk_wrapper_method!(glValidateProgramPipeline, ValidateProgramPipeline, [pipeline: GLuint, ] -> ());
  mk_wrapper_method!(glVertexArrayAttribBinding, VertexArrayAttribBinding, [vaobj: GLuint, attribindex: GLuint, bindingindex: GLuint, ] -> ());
  mk_wrapper_method!(glVertexArrayAttribFormat, VertexArrayAttribFormat, [vaobj: GLuint, attribindex: GLuint, size: GLint, ty: GLenum, normalized: GLboolean, relativeoffset: GLuint, ] -> ());
  mk_wrapper_method!(glVertexArrayAttribIFormat, VertexArrayAttribIFormat, [vaobj: GLuint, attribindex: GLuint, size: GLint, ty: GLenum, relativeoffset: GLuint, ] -> ());
  mk_wrapper_method!(glVertexArrayAttribLFormat, VertexArrayAttribLFormat, [vaobj: GLuint, attribindex: GLuint, size: GLint, ty: GLenum, relativeoffset: GLuint, ] -> ());
  mk_wrapper_method!(glVertexArrayBindingDivisor, VertexArrayBindingDivisor, [vaobj: GLuint, bindingindex: GLuint, divisor: GLuint, ] -> ());
  mk_wrapper_method!(glVertexArrayElementBuffer, VertexArrayElementBuffer, [vaobj: GLuint, buffer: GLuint, ] -> ());
  mk_wrapper_method!(glVertexArrayVertexBuffer, VertexArrayVertexBuffer, [vaobj: GLuint, bindingindex: GLuint, buffer: GLuint, offset: GLintptr, stride: GLsizei, ] -> ());
  mk_wrapper_method!(glVertexArrayVertexBuffers, VertexArrayVertexBuffers, [vaobj: GLuint, first: GLuint, count: GLsizei, buffers: *const GLuint, offsets: *const GLintptr, strides: *const GLsizei, ] -> ());
  mk_wrapper_method!(glVertexAttrib1d, VertexAttrib1d, [index: GLuint, x: GLdouble, ] -> ());
  mk_wrapper_method!(glVertexAttrib1dv, VertexAttrib1dv, [index: GLuint, v: *const GLdouble, ] -> ());
  mk_wrapper_method!(glVertexAttrib1f, VertexAttrib1f, [index: GLuint, x: GLfloat, ] -> ());
  mk_wrapper_method!(glVertexAttrib1fv, VertexAttrib1fv, [index: GLuint, v: *const GLfloat, ] -> ());
  mk_wrapper_method!(glVertexAttrib1s, VertexAttrib1s, [index: GLuint, x: GLshort, ] -> ());
  mk_wrapper_method!(glVertexAttrib1sv, VertexAttrib1sv, [index: GLuint, v: *const GLshort, ] -> ());
  mk_wrapper_method!(glVertexAttrib2d, VertexAttrib2d, [index: GLuint, x: GLdouble, y: GLdouble, ] -> ());
  mk_wrapper_method!(glVertexAttrib2dv, VertexAttrib2dv, [index: GLuint, v: *const GLdouble, ] -> ());
  mk_wrapper_method!(glVertexAttrib2f, VertexAttrib2f, [index: GLuint, x: GLfloat, y: GLfloat, ] -> ());
  mk_wrapper_method!(glVertexAttrib2fv, VertexAttrib2fv, [index: GLuint, v: *const GLfloat, ] -> ());
  mk_wrapper_method!(glVertexAttrib2s, VertexAttrib2s, [index: GLuint, x: GLshort, y: GLshort, ] -> ());
  mk_wrapper_method!(glVertexAttrib2sv, VertexAttrib2sv, [index: GLuint, v: *const GLshort, ] -> ());
  mk_wrapper_method!(glVertexAttrib3d, VertexAttrib3d, [index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, ] -> ());
  mk_wrapper_method!(glVertexAttrib3dv, VertexAttrib3dv, [index: GLuint, v: *const GLdouble, ] -> ());
  mk_wrapper_method!(glVertexAttrib3f, VertexAttrib3f, [index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, ] -> ());
  mk_wrapper_method!(glVertexAttrib3fv, VertexAttrib3fv, [index: GLuint, v: *const GLfloat, ] -> ());
  mk_wrapper_method!(glVertexAttrib3s, VertexAttrib3s, [index: GLuint, x: GLshort, y: GLshort, z: GLshort, ] -> ());
  mk_wrapper_method!(glVertexAttrib3sv, VertexAttrib3sv, [index: GLuint, v: *const GLshort, ] -> ());
  mk_wrapper_method!(glVertexAttrib4Nbv, VertexAttrib4Nbv, [index: GLuint, v: *const GLbyte, ] -> ());
  mk_wrapper_method!(glVertexAttrib4Niv, VertexAttrib4Niv, [index: GLuint, v: *const GLint, ] -> ());
  mk_wrapper_method!(glVertexAttrib4Nsv, VertexAttrib4Nsv, [index: GLuint, v: *const GLshort, ] -> ());
  mk_wrapper_method!(glVertexAttrib4Nub, VertexAttrib4Nub, [index: GLuint, x: GLubyte, y: GLubyte, z: GLubyte, w: GLubyte, ] -> ());
  mk_wrapper_method!(glVertexAttrib4Nubv, VertexAttrib4Nubv, [index: GLuint, v: *const GLubyte, ] -> ());
  mk_wrapper_method!(glVertexAttrib4Nuiv, VertexAttrib4Nuiv, [index: GLuint, v: *const GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttrib4Nusv, VertexAttrib4Nusv, [index: GLuint, v: *const GLushort, ] -> ());
  mk_wrapper_method!(glVertexAttrib4bv, VertexAttrib4bv, [index: GLuint, v: *const GLbyte, ] -> ());
  mk_wrapper_method!(glVertexAttrib4d, VertexAttrib4d, [index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble, ] -> ());
  mk_wrapper_method!(glVertexAttrib4dv, VertexAttrib4dv, [index: GLuint, v: *const GLdouble, ] -> ());
  mk_wrapper_method!(glVertexAttrib4f, VertexAttrib4f, [index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat, ] -> ());
  mk_wrapper_method!(glVertexAttrib4fv, VertexAttrib4fv, [index: GLuint, v: *const GLfloat, ] -> ());
  mk_wrapper_method!(glVertexAttrib4iv, VertexAttrib4iv, [index: GLuint, v: *const GLint, ] -> ());
  mk_wrapper_method!(glVertexAttrib4s, VertexAttrib4s, [index: GLuint, x: GLshort, y: GLshort, z: GLshort, w: GLshort, ] -> ());
  mk_wrapper_method!(glVertexAttrib4sv, VertexAttrib4sv, [index: GLuint, v: *const GLshort, ] -> ());
  mk_wrapper_method!(glVertexAttrib4ubv, VertexAttrib4ubv, [index: GLuint, v: *const GLubyte, ] -> ());
  mk_wrapper_method!(glVertexAttrib4uiv, VertexAttrib4uiv, [index: GLuint, v: *const GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttrib4usv, VertexAttrib4usv, [index: GLuint, v: *const GLushort, ] -> ());
  mk_wrapper_method!(glVertexAttribBinding, VertexAttribBinding, [attribindex: GLuint, bindingindex: GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribDivisor, VertexAttribDivisor, [index: GLuint, divisor: GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribFormat, VertexAttribFormat, [attribindex: GLuint, size: GLint, ty: GLenum, normalized: GLboolean, relativeoffset: GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribI1i, VertexAttribI1i, [index: GLuint, x: GLint, ] -> ());
  mk_wrapper_method!(glVertexAttribI1iv, VertexAttribI1iv, [index: GLuint, v: *const GLint, ] -> ());
  mk_wrapper_method!(glVertexAttribI1ui, VertexAttribI1ui, [index: GLuint, x: GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribI1uiv, VertexAttribI1uiv, [index: GLuint, v: *const GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribI2i, VertexAttribI2i, [index: GLuint, x: GLint, y: GLint, ] -> ());
  mk_wrapper_method!(glVertexAttribI2iv, VertexAttribI2iv, [index: GLuint, v: *const GLint, ] -> ());
  mk_wrapper_method!(glVertexAttribI2ui, VertexAttribI2ui, [index: GLuint, x: GLuint, y: GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribI2uiv, VertexAttribI2uiv, [index: GLuint, v: *const GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribI3i, VertexAttribI3i, [index: GLuint, x: GLint, y: GLint, z: GLint, ] -> ());
  mk_wrapper_method!(glVertexAttribI3iv, VertexAttribI3iv, [index: GLuint, v: *const GLint, ] -> ());
  mk_wrapper_method!(glVertexAttribI3ui, VertexAttribI3ui, [index: GLuint, x: GLuint, y: GLuint, z: GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribI3uiv, VertexAttribI3uiv, [index: GLuint, v: *const GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribI4bv, VertexAttribI4bv, [index: GLuint, v: *const GLbyte, ] -> ());
  mk_wrapper_method!(glVertexAttribI4i, VertexAttribI4i, [index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint, ] -> ());
  mk_wrapper_method!(glVertexAttribI4iv, VertexAttribI4iv, [index: GLuint, v: *const GLint, ] -> ());
  mk_wrapper_method!(glVertexAttribI4sv, VertexAttribI4sv, [index: GLuint, v: *const GLshort, ] -> ());
  mk_wrapper_method!(glVertexAttribI4ubv, VertexAttribI4ubv, [index: GLuint, v: *const GLubyte, ] -> ());
  mk_wrapper_method!(glVertexAttribI4ui, VertexAttribI4ui, [index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribI4uiv, VertexAttribI4uiv, [index: GLuint, v: *const GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribI4usv, VertexAttribI4usv, [index: GLuint, v: *const GLushort, ] -> ());
  mk_wrapper_method!(glVertexAttribIFormat, VertexAttribIFormat, [attribindex: GLuint, size: GLint, ty: GLenum, relativeoffset: GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribIPointer, VertexAttribIPointer, [index: GLuint, size: GLint, ty: GLenum, stride: GLsizei, pointer: *const c_void, ] -> ());
  mk_wrapper_method!(glVertexAttribL1d, VertexAttribL1d, [index: GLuint, x: GLdouble, ] -> ());
  mk_wrapper_method!(glVertexAttribL1dv, VertexAttribL1dv, [index: GLuint, v: *const GLdouble, ] -> ());
  mk_wrapper_method!(glVertexAttribL2d, VertexAttribL2d, [index: GLuint, x: GLdouble, y: GLdouble, ] -> ());
  mk_wrapper_method!(glVertexAttribL2dv, VertexAttribL2dv, [index: GLuint, v: *const GLdouble, ] -> ());
  mk_wrapper_method!(glVertexAttribL3d, VertexAttribL3d, [index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, ] -> ());
  mk_wrapper_method!(glVertexAttribL3dv, VertexAttribL3dv, [index: GLuint, v: *const GLdouble, ] -> ());
  mk_wrapper_method!(glVertexAttribL4d, VertexAttribL4d, [index: GLuint, x: GLdouble, y: GLdouble, z: GLdouble, w: GLdouble, ] -> ());
  mk_wrapper_method!(glVertexAttribL4dv, VertexAttribL4dv, [index: GLuint, v: *const GLdouble, ] -> ());
  mk_wrapper_method!(glVertexAttribLFormat, VertexAttribLFormat, [attribindex: GLuint, size: GLint, ty: GLenum, relativeoffset: GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribLPointer, VertexAttribLPointer, [index: GLuint, size: GLint, ty: GLenum, stride: GLsizei, pointer: *const c_void, ] -> ());
  mk_wrapper_method!(glVertexAttribP1ui, VertexAttribP1ui, [index: GLuint, ty: GLenum, normalized: GLboolean, value: GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribP1uiv, VertexAttribP1uiv, [index: GLuint, ty: GLenum, normalized: GLboolean, value: *const GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribP2ui, VertexAttribP2ui, [index: GLuint, ty: GLenum, normalized: GLboolean, value: GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribP2uiv, VertexAttribP2uiv, [index: GLuint, ty: GLenum, normalized: GLboolean, value: *const GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribP3ui, VertexAttribP3ui, [index: GLuint, ty: GLenum, normalized: GLboolean, value: GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribP3uiv, VertexAttribP3uiv, [index: GLuint, ty: GLenum, normalized: GLboolean, value: *const GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribP4ui, VertexAttribP4ui, [index: GLuint, ty: GLenum, normalized: GLboolean, value: GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribP4uiv, VertexAttribP4uiv, [index: GLuint, ty: GLenum, normalized: GLboolean, value: *const GLuint, ] -> ());
  mk_wrapper_method!(glVertexAttribPointer, VertexAttribPointer, [index: GLuint, size: GLint, ty: GLenum, normalized: GLboolean, stride: GLsizei, pointer: *const c_void, ] -> ());
  mk_wrapper_method!(glVertexBindingDivisor, VertexBindingDivisor, [bindingindex: GLuint, divisor: GLuint, ] -> ());
  mk_wrapper_method!(glVertexP2ui, VertexP2ui, [ty: GLenum, value: GLuint, ] -> ());
  mk_wrapper_method!(glVertexP2uiv, VertexP2uiv, [ty: GLenum, value: *const GLuint, ] -> ());
  mk_wrapper_method!(glVertexP3ui, VertexP3ui, [ty: GLenum, value: GLuint, ] -> ());
  mk_wrapper_method!(glVertexP3uiv, VertexP3uiv, [ty: GLenum, value: *const GLuint, ] -> ());
  mk_wrapper_method!(glVertexP4ui, VertexP4ui, [ty: GLenum, value: GLuint, ] -> ());
  mk_wrapper_method!(glVertexP4uiv, VertexP4uiv, [ty: GLenum, value: *const GLuint, ] -> ());
  mk_wrapper_method!(glViewport, Viewport, [x: GLint, y: GLint, width: GLsizei, height: GLsizei, ] -> ());
  mk_wrapper_method!(glViewportArrayv, ViewportArrayv, [first: GLuint, count: GLsizei, v: *const GLfloat, ] -> ());
  mk_wrapper_method!(glViewportIndexedf, ViewportIndexedf, [index: GLuint, x: GLfloat, y: GLfloat, w: GLfloat, h: GLfloat, ] -> ());
  mk_wrapper_method!(glViewportIndexedfv, ViewportIndexedfv, [index: GLuint, v: *const GLfloat, ] -> ());
  mk_wrapper_method!(glWaitSync, WaitSync, [sync: GLsync, flags: GLbitfield, timeout: GLuint64, ] -> ());
}
